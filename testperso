<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test de Personnalit√© Professionnelle</title>
    <style>
        /* General styling for a modern and clean look */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; /* Use Inter font */
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 1s ease-in-out, padding 0.3s ease; /* Smooth background transition */
            color: #333; /* Default text color */
        }
        .container {
            max-width: 800px;
            width: 100%;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.15); /* Stronger shadow for depth */
            overflow: hidden;
            transition: max-width 0.5s ease;
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            text-align: center;
            border-bottom-left-radius: 20px; /* Rounded corners for header bottom */
            border-bottom-right-radius: 20px;
            position: relative; /* For potential future elements */
            overflow: hidden; /* Ensure gradient stays within bounds */
        }
        .header h1 {
            font-size: 2.8em; /* Slightly larger heading */
            margin-bottom: 10px;
            font-weight: 800; /* Bolder font */
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2); /* Text shadow for pop */
        }
        .header p {
            font-size: 1.3em; /* Slightly larger paragraph */
            opacity: 0.95;
            font-weight: 300;
        }
        .content {
            padding: 40px;
        }
        .welcome-section {
            text-align: center;
        }
        /* Features grid for the welcome page */
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); /* Adjusted minmax */
            gap: 30px;
            margin: 30px 0;
        }
        .feature {
            text-align: center;
            padding: 25px; /* More padding */
            border-radius: 15px;
            background: #f8f9fa;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08); /* Subtle shadow */
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .feature:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.12);
        }
        .feature-icon {
            width: 70px; /* Larger icon */
            height: 70px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            margin: 0 auto 18px; /* More margin */
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 30px; /* Larger icon font */
            font-weight: bold;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .feature h3 {
            font-size: 1.3em;
            margin-bottom: 10px;
            color: #444;
        }
        .feature p {
            font-size: 0.95em;
            color: #777;
        }

        /* General button styling */
        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 18px 35px; /* Larger padding */
            border-radius: 12px; /* More rounded */
            font-size: 1.2em; /* Larger font */
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 25px 0; /* More margin */
            box-shadow: 0 8px 20px rgba(0,0,0,0.2); /* Button shadow */
            letter-spacing: 0.5px;
            text-transform: uppercase;
            position: relative; /* For subtle glow effect */
            overflow: hidden; /* For gradient animation */
        }
        .btn:hover {
            transform: translateY(-3px) scale(1.02); /* More pronounced hover */
            box-shadow: 0 15px 30px rgba(0,0,0,0.3);
        }
        .btn:active {
            transform: translateY(0);
            box-shadow: 0 5px 10px rgba(0,0,0,0.2);
            background: linear-gradient(135deg, #5a6cd9 0%, #6b3e92 100%); /* Slightly darker on active */
        }
        /* Subtle button glow on hover */
        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.1);
            transition: transform 0.5s ease-out;
            transform: scaleX(0);
            transform-origin: left;
            z-index: 0;
        }
        .btn:hover::before {
            transform: scaleX(1);
        }
        .btn span {
            position: relative;
            z-index: 1;
        }


        /* Progress bar styling */
        .progress-container {
            margin: 30px 0;
        }
        .progress-bar {
            width: 100%;
            height: 10px; /* Thicker bar */
            background: #e9ecef;
            border-radius: 5px;
            overflow: hidden;
            box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
        }
        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            transition: width 0.5s ease-out; /* Smoother transition */
            width: 0%;
            border-radius: 5px;
        }
        
        /* Scenario and choice styling */
        .scenario-card {
            background: linear-gradient(135deg, #f0f2f5, #e6e9ee);
            color: #333;
            padding: 35px; /* More padding */
            border-radius: 18px; /* More rounded */
            margin: 30px 0;
            border: 1px solid #dee2e6;
            box-shadow: 0 8px 20px rgba(0,0,0,0.08);
            transition: transform 0.5s ease-out, opacity 0.5s ease-out; /* Smooth transition for scenario change */
        }
        .scenario-title {
            font-size: 2em; /* Larger title */
            font-weight: 700;
            margin-bottom: 20px;
            color: #4a5fe6; /* Slightly different blue for emphasis */
            text-align: center;
        }
        .scenario-text {
            font-size: 1.15em; /* Larger text */
            line-height: 1.7;
            margin-bottom: 25px;
            color: #555;
        }
        .choices {
            display: grid;
            gap: 20px; /* More space between choices */
            margin: 30px 0;
        }
        .choice {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px; /* More rounded */
            padding: 22px; /* More padding */
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05); /* Subtle shadow */
        }
        .choice:hover {
            border-color: #667eea;
            background: #f0f4ff; /* Lighter hover background */
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }
        .choice:active {
            transform: scale(0.98);
            background: #e0e0e0; /* A darker shade on active */
            box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);
        }
        .choice.selected-choice-feedback { /* New class for immediate feedback */
            background: #d4edda; /* Light green */
            border-color: #28a745;
            transform: scale(1.01);
            box-shadow: 0 0 15px rgba(40, 167, 69, 0.4); /* Green glow for selected */
        }
        .choice-letter {
            width: 45px; /* Larger letter circle */
            height: 45px;
            background: #667eea;
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.3em;
            margin-right: 20px;
            flex-shrink: 0;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .choice-text {
            font-size: 1.1em; /* Slightly larger choice text */
            line-height: 1.6;
            color: #333;
        }
        .choice.disabled {
            opacity: 0.7;
            cursor: not-allowed;
            pointer-events: none; /* Disable clicks */
            background: #f0f0f0;
        }
        .choice.disabled .choice-letter {
            background: #b0b0b0;
        }
        .choice.disabled:hover {
            transform: none;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        }


        /* --- MINI-GAMES STYLES --- */
        .minigame-container {
            border: 1px solid #dee2e6;
            border-radius: 18px;
            margin: 30px 0;
            padding: 30px; /* More padding */
            background: #f8f9fa;
            box-shadow: 0 8px 20px rgba(0,0,0,0.08);
            transition: transform 0.5s ease-out, opacity 0.5s ease-out; /* Smooth transition for scenario change */
        }
        .minigame-header {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 18px;
            border-bottom: 1px solid #e9ecef;
        }
        .minigame-icon {
            font-size: 2.5em; /* Larger icon */
            margin-right: 18px;
        }
        .minigame-title {
            font-size: 1.8em; /* Larger title */
            font-weight: 700;
            color: #333;
        }
        .minigame-question {
            font-size: 1.2em; /* Larger question text */
            font-weight: bold;
            color: #667eea;
            margin-top: 25px;
            text-align: center;
        }

        /* Email view */
        .email-view {
            font-family: 'Segoe UI', sans-serif;
        }
        .email-meta {
            font-size: 1em; /* Slightly larger */
            color: #666;
            line-height: 1.8;
            margin-bottom: 15px;
        }
        .email-meta span {
            font-weight: bold;
            color: #333;
        }
        .email-body {
            margin-top: 20px;
            font-size: 1.05em;
            line-height: 1.8;
            background: white;
            padding: 25px;
            border-radius: 10px;
            border: 1px solid #e9ecef;
            box-shadow: inset 0 1px 5px rgba(0,0,0,0.05);
        }

        /* Phone call view */
        .phone-view {
            text-align: center;
        }
        .phone-caller-id {
            font-size: 1.6em; /* Larger */
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
        }
        .phone-caller-number {
            font-size: 1.1em;
            color: #666;
            margin-top: 5px;
        }
        .phone-action {
            margin-top: 20px;
            font-style: italic;
            color: #555;
            font-size: 1.1em;
        }

        /* Meeting view */
        .meeting-view-content {
            display: flex;
            align-items: flex-start;
        }
        .meeting-avatar {
            font-size: 3.5em; /* Larger avatar */
            margin-right: 25px;
            margin-top: 5px;
            flex-shrink: 0;
        }
        .meeting-dialogue {
            font-style: italic;
            background: #e9f5ff;
            border-left: 5px solid #007bff; /* Thicker border */
            padding: 20px;
            border-radius: 0 10px 10px 0;
            font-size: 1.05em;
            line-height: 1.7;
            color: #333;
            flex-grow: 1;
        }

        /* Chat view */
        .chat-view .chat-message {
            background: #e0e0e0;
            padding: 15px;
            border-radius: 15px;
            margin-bottom: 15px;
            font-size: 1.05em;
            line-height: 1.6;
            color: #333;
            text-align: left;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        .chat-view .chat-sender {
            font-weight: bold;
            color: #4a5fe6;
            margin-bottom: 5px;
            display: block;
        }

        /* Task/Prioritization view */
        .task-view .task-list {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
            box-shadow: inset 0 1px 5px rgba(0,0,0,0.05);
        }
        .task-view .task-item {
            padding: 10px 0;
            border-bottom: 1px dashed #e9ecef;
            font-size: 1.05em;
            color: #555;
        }
        .task-view .task-item:last-child {
            border-bottom: none;
        }

        /* Resource Allocation View */
        .allocation-grid {
            display: grid;
            grid-template-columns: 1fr; /* Stack on small screens */
            gap: 20px;
            margin-top: 20px;
        }
        .allocation-item {
            background: white;
            padding: 20px;
            border-radius: 12px;
            border: 1px solid #e9ecef;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .allocation-item label {
            font-weight: bold;
            margin-bottom: 10px;
            font-size: 1.1em;
            color: #444;
        }
        .allocation-item input[type="number"] {
            width: 80px;
            padding: 10px;
            border: 2px solid #ccc;
            border-radius: 8px;
            text-align: center;
            font-size: 1.2em;
            font-weight: bold;
            color: #333;
            -moz-appearance: textfield; /* Hide arrows for Firefox */
        }
        .allocation-item input[type="number"]::-webkit-outer-spin-button,
        .allocation-item input[type="number"]::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .total-allocation-display {
            font-size: 1.3em;
            font-weight: bold;
            margin-top: 25px;
            text-align: center;
            color: #333;
        }
        .total-allocation-display.error {
            color: #dc3545; /* Red for error */
        }
        .allocation-error-message {
            color: #dc3545;
            font-weight: bold;
            margin-top: 10px;
            text-align: center;
            font-size: 0.95em;
        }

        /* Fun Fact Box */
        .fun-fact-box {
            background: #e6f7ff; /* Light blue */
            border: 1px solid #91d5ff;
            border-radius: 10px;
            padding: 15px;
            margin-top: 20px;
            font-size: 0.95em;
            color: #0056b3;
            text-align: center;
            opacity: 0;
            transform: translateY(10px);
            animation: fadeInOutFact 4s ease-in-out forwards; /* Fade in, stay, fade out */
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        @keyframes fadeInOutFact {
            0% { opacity: 0; transform: translateY(10px); }
            10% { opacity: 1; transform: translateY(0); }
            90% { opacity: 1; transform: translateY(0); }
            100% { opacity: 0; transform: translateY(-10px); }
        }


        /* Results page styling */
        .result-profile {
            text-align: center;
            margin: 40px 0; /* More margin */
        }
        .profile-icon {
            width: 120px; /* Larger icon */
            height: 120px;
            border-radius: 50%;
            margin: 0 auto 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 3em; /* Larger icon font */
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            border: 5px solid white; /* White border around icon */
        }
        .profile-name {
            font-size: 3em; /* Larger name */
            font-weight: 800;
            color: #333;
            margin-bottom: 20px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        }
        .profile-description {
            font-size: 1.4em; /* Larger description */
            color: #666;
            line-height: 1.6;
            max-width: 600px;
            margin: 0 auto;
        }
        .result-section {
            background: #f8f9fa;
            padding: 30px; /* More padding */
            border-radius: 18px;
            margin: 25px 0; /* More margin */
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        .result-section h3 {
            font-size: 1.6em; /* Larger heading */
            color: #333;
            margin-bottom: 18px;
            display: flex;
            align-items: center;
            font-weight: 700;
        }
        .result-section h3::before {
            content: "‚úì";
            background: #28a745;
            color: white;
            width: 28px; /* Larger checkmark */
            height: 28px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 12px;
            font-size: 0.9em;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .traits-list {
            list-style: none;
            padding-left: 0;
        }
        .traits-list li {
            padding: 10px 0; /* More padding */
            border-bottom: 1px solid #e9ecef; /* Lighter border */
            position: relative;
            padding-left: 30px; /* More space for bullet */
            font-size: 1.1em;
            color: #555;
        }
        .traits-list li:last-child {
            border-bottom: none;
        }
        .traits-list li:before {
            content: "‚Ä¢";
            color: #667eea;
            font-weight: bold;
            position: absolute;
            left: 0;
            font-size: 1.2em;
            line-height: 1;
        }
        .scores-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* Adjusted minmax for more items */
            gap: 25px; /* More gap */
            margin: 25px 0;
        }
        .score-item {
            text-align: center;
            padding: 10px;
            border-radius: 10px;
            background: white;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }
        .score-circle {
            width: 70px; /* Larger circle */
            height: 70px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 12px;
            color: white;
            font-weight: bold;
            font-size: 1.4em; /* Larger score font */
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .score-item p {
            font-size: 1em;
            color: #444;
            font-weight: 500;
        }

        /* Utility classes */
        .hidden {
            display: none;
        }
        .fade-in {
            animation: fadeIn 0.6s ease-in-out; /* Slightly longer, smoother fade */
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        /* Profile-specific colors */
        .leader { background: #dc3545; }
        .analyst { background: #007bff; }
        .creative { background: #6f42c1; }
        .collaborator { background: #28a745; }
        .strategist { background: #6610f2; }
        .executor { background: #fd7e14; }
        
        /* --- MODE SWITCHER STYLES --- */
        .mode-switcher {
            position: fixed;
            bottom: 30px;
            right: 30px;
            z-index: 1000;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.35); /* Stronger shadow */
            overflow: hidden;
            transition: all 0.3s ease;
            display: flex; /* Ensure flex for internal buttons */
        }
        .mode-switcher:hover {
            transform: scale(1.08); /* More pronounced hover */
            box-shadow: 0 15px 40px rgba(0,0,0,0.45);
        }
        .mode-buttons {
            display: flex;
            align-items: center;
        }
        .mode-btn {
            background: none;
            border: none;
            color: white;
            padding: 15px 20px; /* More horizontal padding */
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.4em; /* Larger icons */
            opacity: 0.8;
        }
        .mode-btn:hover {
            opacity: 1;
            background: rgba(255,255,255,0.15); /* Slightly stronger hover effect */
        }
        .mode-btn.active {
            opacity: 1;
            background: rgba(255,255,255,0.25); /* Stronger active effect */
            box-shadow: inset 0 2px 10px rgba(0,0,0,0.3);
        }
        .mode-divider {
            width: 1px;
            height: 35px; /* Taller divider */
            background: rgba(255,255,255,0.4); /* Stronger divider */
        }

        /* Player State Indicators */
        .player-state-indicators {
            display: flex;
            justify-content: space-around;
            margin-top: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap; /* Allow wrapping on small screens */
            gap: 15px; /* Space between indicators */
        }
        .indicator-item {
            position: relative; /* For positioning change text */
            display: flex;
            flex-direction: column;
            align-items: center;
            background: #f0f2f5;
            padding: 15px 20px;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            min-width: 150px;
            flex: 1; /* Allow items to grow */
            overflow: hidden; /* To contain the pulse animation */
        }
        .indicator-label {
            font-size: 1em;
            font-weight: bold;
            color: #555;
            margin-bottom: 8px;
        }
        .indicator-bar-container {
            width: 100%;
            height: 10px;
            background: #e9ecef;
            border-radius: 5px;
            overflow: hidden;
            margin-bottom: 5px;
        }
        .indicator-bar-fill {
            height: 100%;
            width: 0%;
            border-radius: 5px;
            transition: width 0.5s ease-out, background-color 0.5s ease-out;
        }
        .indicator-value {
            font-size: 1.1em;
            font-weight: bold;
            color: #333;
            display: flex;
            align-items: center;
        }
        .indicator-value .emoji {
            margin-left: 8px;
            font-size: 1.2em;
        }

        /* Indicator color states */
        .indicator-bar-fill.good { background-color: #28a745; } /* Green */
        .indicator-bar-fill.medium { background-color: #ffc107; } /* Yellow */
        .indicator-bar-fill.bad { background-color: #dc3545; } /* Red */

        /* For the temporary text indicating change */
        .change-indicator-text {
            position: absolute;
            top: 50%; /* Center vertically */
            left: 50%; /* Center horizontally */
            transform: translate(-50%, -50%) translateY(10px); /* Adjust for initial position */
            font-size: 1.2em; /* Slightly larger for visibility */
            font-weight: bold;
            opacity: 0;
            transition: all 0.3s ease-out;
            pointer-events: none; /* Ensure it doesn't block clicks */
            z-index: 5;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.2); /* Add shadow for readability */
        }
        .change-indicator-text.positive {
            color: #28a745; /* Green */
        }
        .change-indicator-text.negative {
            color: #dc3545; /* Red */
        }
        .change-indicator-text.show {
            opacity: 1;
            transform: translate(-50%, -50%) translateY(-10px); /* Move up slightly */
        }

        /* For a subtle pulse/glow on the bar */
        .indicator-bar-fill.pulse-positive {
            animation: pulsePositive 0.8s ease-out forwards;
        }
        .indicator-bar-fill.pulse-negative {
            animation: pulseNegative 0.8s ease-out forwards;
        }

        @keyframes pulsePositive {
            0% { box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7); }
            70% { box-shadow: 0 0 0 10px rgba(40, 167, 69, 0); }
            100% { box-shadow: 0 0 0 0 rgba(40, 167, 69, 0); }
        }
        @keyframes pulseNegative {
            0% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7); }
            70% { box-shadow: 0 0 0 10px rgba(220, 53, 69, 0); }
            100% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0); }
        }


        /* --- DISPLAY MODES --- */
        /* Mobile Mode */
        body.mobile-mode {
            padding: 15px !important; /* Adjusted padding */
        }
        body.mobile-mode .container {
            max-width: 420px !important; /* Slightly wider for mobile */
            border-radius: 15px; /* Slightly less rounded for mobile */
        }
        body.mobile-mode .header {
            padding: 30px 25px !important;
        }
        body.mobile-mode .content {
            padding: 30px 25px !important;
        }
        body.mobile-mode .header h1 {
            font-size: 2em !important;
        }
        body.mobile-mode .header p {
            font-size: 1.1em !important;
        }
        body.mobile-mode .features {
            grid-template-columns: 1fr !important;
            gap: 20px;
        }
        body.mobile-mode .feature {
            padding: 20px;
        }
        body.mobile-mode .feature-icon {
            width: 60px;
            height: 60px;
            font-size: 26px;
            margin-bottom: 15px;
        }
        body.mobile-mode .btn {
            padding: 15px 25px;
            font-size: 1.05em;
        }
        body.mobile-mode .scenario-card {
            padding: 25px;
            border-radius: 12px;
        }
        body.mobile-mode .scenario-title {
            font-size: 1.6em;
            margin-bottom: 15px;
        }
        body.mobile-mode .scenario-text {
            font-size: 1em;
            margin-bottom: 20px;
        }
        body.mobile-mode .choices {
            grid-template-columns: 1fr !important;
            gap: 12px;
        }
        body.mobile-mode .choice {
            padding: 18px;
            border-radius: 10px;
        }
        body.mobile-mode .choice-letter {
            width: 38px;
            height: 38px;
            font-size: 1.1em;
            margin-right: 15px;
        }
        body.mobile-mode .choice-text {
            font-size: 0.95em !important;
        }
        body.mobile-mode .minigame-container {
            padding: 25px;
            border-radius: 12px;
        }
        body.mobile-mode .minigame-icon {
            font-size: 2em;
            margin-right: 15px;
        }
        body.mobile-mode .minigame-title {
            font-size: 1.4em;
        }
        body.mobile-mode .minigame-question {
            font-size: 1.05em;
            margin-top: 20px;
        }
        body.mobile-mode .email-body,
        body.mobile-mode .meeting-dialogue,
        body.mobile-mode .chat-view .chat-message,
        body.mobile-mode .task-view .task-list,
        body.mobile-mode .resource-allocation-view .allocation-item {
            padding: 20px;
            font-size: 0.95em;
        }
        body.mobile-mode .profile-icon {
            width: 90px;
            height: 90px;
            font-size: 2.5em;
        }
        body.mobile-mode .profile-name {
            font-size: 2.2em !important;
        }
        body.mobile-mode .profile-description {
            font-size: 1.1em;
        }
        body.mobile-mode .result-section {
            padding: 20px;
            border-radius: 12px;
            margin: 15px 0;
        }
        body.mobile-mode .result-section h3 {
            font-size: 1.2em;
            margin-bottom: 12px;
        }
        body.mobile-mode .result-section h3::before {
            width: 22px;
            height: 22px;
            font-size: 0.7em;
            margin-right: 8px;
        }
        body.mobile-mode .traits-list li {
            font-size: 1em;
            padding: 6px 0;
            padding-left: 25px;
        }
        body.mobile-mode .scores-grid {
            grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)) !important;
            gap: 15px;
        }
        body.mobile-mode .score-circle {
            width: 55px;
            height: 55px;
            font-size: 1.1em;
        }
        body.mobile-mode .score-item p {
            font-size: 0.9em;
        }
        body.mobile-mode .player-state-indicators {
            flex-direction: column;
            gap: 10px;
        }
        body.mobile-mode .indicator-item {
                min-width: unset;
                width: 100%;
            }


        /* Desktop Mode */
        body.desktop-mode .container {
            max-width: 1200px !important;
        }
        body.desktop-mode .features {
            grid-template-columns: repeat(3, 1fr) !important;
        }
        body.desktop-mode .choices {
            grid-template-columns: repeat(2, 1fr) !important;
        }
        body.desktop-mode .result-section {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 40px; /* More gap for desktop */
            align-items: start;
        }
        body.desktop-mode .scores-grid {
            grid-template-columns: repeat(3, 1fr) !important;
        }
        body.desktop-mode .allocation-grid {
            grid-template-columns: repeat(2, 1fr); /* Two columns on desktop */
        }

        /* Auto Mode (Responsive) */
        @media (max-width: 768px) {
            body.auto-mode { padding: 15px; }
            body.auto-mode .header { padding: 30px 25px; }
            body.auto-mode .content { padding: 30px 25px; }
            body.auto-mode .header h1 { font-size: 2em; }
            body.auto-mode .header p { font-size: 1.1em; }
            body.auto-mode .profile-name { font-size: 2.2em; }
            body.auto-mode .choices { grid-template-columns: 1fr; }
            body.auto-mode .feature-icon { width: 60px; height: 60px; font-size: 26px; margin-bottom: 15px; }
            body.auto-mode .feature { padding: 20px; }
            body.auto-mode .btn { padding: 15px 25px; font-size: 1.05em; }
            body.auto-mode .scenario-card { padding: 25px; border-radius: 12px; }
            body.auto-mode .scenario-title { font-size: 1.6em; margin-bottom: 15px; }
            body.auto-mode .scenario-text { font-size: 1em; margin-bottom: 20px; }
            body.auto-mode .choice { padding: 18px; border-radius: 10px; }
            body.auto-mode .choice-letter { width: 38px; height: 38px; font-size: 1.1em; margin-right: 15px; }
            body.auto-mode .choice-text { font-size: 0.95em; }
            body.auto-mode .minigame-container { padding: 25px; border-radius: 12px; }
            body.auto-mode .minigame-icon { font-size: 2em; margin-right: 15px; }
            body.auto-mode .minigame-title { font-size: 1.4em; }
            body.auto-mode .minigame-question { font-size: 1.05em; margin-top: 20px; }
            body.auto-mode .email-body,
            body.auto-mode .meeting-dialogue,
            body.auto-mode .chat-view .chat-message,
            body.auto-mode .task-view .task-list,
            body.auto-mode .resource-allocation-view .allocation-item { padding: 20px; font-size: 0.95em; }
            body.auto-mode .profile-icon { width: 90px; height: 90px; font-size: 2.5em; }
            body.auto-mode .profile-name { font-size: 2.2em; }
            body.auto-mode .profile-description { font-size: 1.1em; }
            body.auto-mode .result-section { padding: 20px; border-radius: 12px; margin: 15px 0; }
            body.auto-mode .result-section h3 { font-size: 1.2em; margin-bottom: 12px; }
            body.auto-mode .result-section h3::before { width: 22px; height: 22px; font-size: 0.7em; margin-right: 8px; }
            body.auto-mode .traits-list li { font-size: 1em; padding: 6px 0; padding-left: 25px; }
            body.auto-mode .scores-grid { grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)); gap: 15px; }
            body.auto-mode .score-circle { width: 55px; height: 55px; font-size: 1.1em; }
            body.auto-mode .score-item p { font-size: 0.9em; }
            body.auto-mode .player-state-indicators {
                flex-direction: column;
                gap: 10px;
            }
            body.auto-mode .indicator-item {
                min-width: unset;
                width: 100%;
            }
        }
    </style>
</head>
<body class="auto-mode">
    <div class="container">
        <!-- Welcome Screen -->
        <div id="welcome" class="fade-in">
            <div class="header">
                <h1>üéØ Test de Personnalit√© Professionnelle</h1>
                <p>D√©couvrez votre profil professionnel en 15 questions</p>
            </div>
            <div class="content">
                <div class="welcome-section">
                    <h2>D√©couvrez qui vous √™tes au travail</h2>
                    <p style="font-size: 1.1em; color: #666; margin: 20px 0;">√Ä travers 15 sc√©narios immersifs, incluant des simulations de situations r√©elles, identifiez votre profil et trouvez votre place id√©ale en entreprise.</p>
                    <div class="features">
                        <div class="feature">
                            <div class="feature-icon">üéÆ</div>
                            <h3>Mini-Jeux Immersifs</h3>
                            <p>R√©agissez √† des e-mails, appels et entretiens simul√©s.</p>
                        </div>
                        <div class="feature">
                            <div class="feature-icon">üìä</div>
                            <h3>Analyse Pr√©cise</h3>
                            <p>Chaque choix r√©v√®le des facettes de votre personnalit√©.</p>
                        </div>
                        <div class="feature">
                            <div class="feature-icon">üí°</div>
                            <h3>Conseils Personnalis√©s</h3>
                            <p>Des recommandations pour optimiser votre carri√®re.</p>
                        </div>
                    </div>
                    <button class="btn" onclick="startTest()"><span>üöÄ Commencer le Test</span></button>
                    <p style="color: #888; margin-top: 10px;">‚è±Ô∏è Dur√©e : 10-12 minutes</p>
                </div>
            </div>
        </div>

        <!-- Test in Progress -->
        <div id="test" class="hidden">
            <div class="header">
                <h1 id="scenario-counter">Sc√©nario 1 / 15</h1>
                <p id="progress-text">7% compl√©t√©</p>
            </div>
            <div class="content">
                <div class="progress-container">
                    <div class="progress-bar">
                        <div id="progress-fill" class="progress-fill"></div>
                    </div>
                </div>

                <!-- Player State Indicators -->
                <div class="player-state-indicators">
                    <div class="indicator-item">
                        <div class="indicator-label">Ambiance d'√âquipe</div>
                        <div class="indicator-bar-container">
                            <div id="team-morale-bar" class="indicator-bar-fill"></div>
                        </div>
                        <div class="indicator-value"><span id="team-morale-value">50</span>% <span id="team-morale-emoji" class="emoji">üòê</span></div>
                    </div>
                    <div class="indicator-item">
                        <div class="indicator-label">Qualit√© du Projet</div>
                        <div class="indicator-bar-container">
                            <div id="project-quality-bar" class="indicator-bar-fill"></div>
                        </div>
                        <div class="indicator-value"><span id="project-quality-value">50</span>% <span id="project-quality-emoji" class="emoji">üòê</span></div>
                    </div>
                    <div class="indicator-item">
                        <div class="indicator-label">R√©putation Perso.</div>
                        <div class="indicator-bar-container">
                            <div id="personal-reputation-bar" class="indicator-bar-fill"></div>
                        </div>
                        <div class="indicator-value"><span id="personal-reputation-value">50</span>% <span id="personal-reputation-emoji" class="emoji">üòê</span></div>
                    </div>
                </div>

                <!-- Standard Scenario View -->
                <div id="standard-scenario-view" class="scenario-card hidden">
                    <div id="scenario-title" class="scenario-title"></div>
                    <div id="scenario-situation" class="scenario-text"></div>
                </div>

                <!-- Email Minigame View -->
                <div id="email-scenario-view" class="minigame-container email-view hidden">
                    <div class="minigame-header">
                        <div class="minigame-icon">üìß</div>
                        <h2 class="minigame-title">Nouveau Message</h2>
                    </div>
                    <div class="email-meta">
                        <p><strong>De :</strong> <span id="email-from"></span></p>
                        <p><strong>Sujet :</strong> <span id="email-subject"></span></p>
                    </div>
                    <div id="email-body" class="email-body"></div>
                </div>

                <!-- Phone Minigame View -->
                <div id="phone-scenario-view" class="minigame-container phone-view hidden">
                     <div class="minigame-header" style="justify-content: center;">
                        <div class="minigame-icon">üìû</div>
                        <h2 class="minigame-title">Appel Entrant...</h2>
                    </div>
                    <p id="phone-caller-id" class="phone-caller-id"></p>
                    <p id="phone-caller-number" class="phone-caller-number"></p>
                    <p id="phone-action" class="phone-action"></p>
                </div>

                <!-- Meeting Minigame View -->
                 <div id="meeting-scenario-view" class="minigame-container meeting-view hidden">
                     <div class="minigame-header">
                        <div class="minigame-icon">üóìÔ∏è</div>
                        <h2 class="minigame-title" id="meeting-title"></h2>
                    </div>
                    <div class="meeting-view-content">
                        <div id="meeting-avatar" class="meeting-avatar"></div>
                        <div class="meeting-dialogue">
                            <p id="meeting-dialogue-text"></p>
                        </div>
                    </div>
                </div>

                <!-- New: Chat Minigame View -->
                <div id="chat-scenario-view" class="minigame-container chat-view hidden">
                    <div class="minigame-header">
                        <div class="minigame-icon">üí¨</div>
                        <h2 class="minigame-title">Message Instantann√©</h2>
                    </div>
                    <div class="chat-message">
                        <span class="chat-sender" id="chat-sender"></span>
                        <span id="chat-message-text"></span>
                    </div>
                </div>

                <!-- New: Task/Prioritization Minigame View -->
                <div id="task-scenario-view" class="minigame-container task-view hidden">
                    <div class="minigame-header">
                        <div class="minigame-icon">‚úÖ</div>
                        <h2 class="minigame-title">Priorisation des T√¢ches</h2>
                    </div>
                    <div class="scenario-text" id="task-situation"></div>
                    <div class="task-list" id="task-items">
                        <!-- Task items will be dynamically inserted here -->
                    </div>
                </div>

                <!-- New: Resource Allocation Minigame View -->
                <div id="resource-allocation-view" class="minigame-container hidden">
                    <div class="minigame-header">
                        <div class="minigame-icon">üí∞</div>
                        <h2 class="minigame-title" id="allocation-title"></h2>
                    </div>
                    <div class="scenario-text" id="allocation-situation"></div>
                    <div class="allocation-grid">
                        <div class="allocation-item">
                            <label for="r-d-input">Recherche & D√©veloppement</label>
                            <input type="number" id="r-d-input" min="0" max="100" value="25">
                        </div>
                        <div class="allocation-item">
                            <label for="marketing-input">Marketing & Ventes</label>
                            <input type="number" id="marketing-input" min="0" max="100" value="25">
                        </div>
                        <div class="allocation-item">
                            <label for="operations-input">Op√©rations & Logistique</label>
                            <input type="number" id="operations-input" min="0" max="100" value="25">
                        </div>
                        <div class="allocation-item">
                            <label for="support-input">Support Client & Relations</label>
                            <input type="number" id="support-input" min="0" max="100" value="25">
                        </div>
                    </div>
                    <div class="total-allocation-display">Total allou√© : <span id="total-allocation-value">100</span> / 100</div>
                    <div id="allocation-error-message" class="allocation-error-message hidden">Le total doit √™tre de 100 !</div>
                    <button class="btn" id="submit-allocation-btn" onclick="submitAllocation()"><span>Valider l'allocation</span></button>
                </div>


                <div id="scenario-question" class="minigame-question"></div>

                <div id="choices" class="choices">
                    <!-- Choices will be dynamically generated here -->
                </div>
                <div id="fun-fact-placeholder"></div> <!-- Placeholder for fun facts -->
                <p style="text-align: center; color: #888; margin-top: 30px;">
                    üí° Choisissez la r√©ponse qui correspond le mieux √† votre r√©action naturelle.
                </p>
                <div style="text-align: center; margin-top: 20px;">
                    <button class="btn" id="prev-scenario-btn" onclick="goBack()"><span>‚Ü©Ô∏è Pr√©c√©dent</span></button>
                </div>
            </div>
        </div>

        <!-- Results Screen -->
        <div id="results" class="hidden">
            <div class="header">
                <h1>üèÜ Votre Profil Professionnel</h1>
                <p>D√©couvrez qui vous √™tes vraiment au travail</p>
            </div>
            <div class="content">
                <div class="result-profile">
                    <div id="profile-icon" class="profile-icon"></div>
                    <div id="profile-name" class="profile-name"></div>
                    <div id="profile-description" class="profile-description"></div>
                </div>
                <div class="result-section">
                    <h3>Vos Forces Principales</h3>
                    <ul id="traits-list" class="traits-list"></ul>
                </div>
                <div class="result-section">
                    <h3>R√¥les Id√©aux</h3>
                    <p id="ideal-roles" style="font-size: 1.1em; line-height: 1.6;"></p>
                </div>
                <div class="result-section">
                    <h3>üí° Conseil de D√©veloppement</h3>
                    <p id="development-advice" style="font-size: 1.1em; line-height: 1.6;"></p>
                </div>
                <div class="result-section">
                    <h3>üìä D√©tail de vos Scores</h3>
                    <div id="scores-grid" class="scores-grid"></div>
                </div>
                <div style="text-align: center; margin-top: 30px;">
                    <button class="btn" onclick="resetTest()"><span>üîÑ Refaire le Test</span></button>
                </div>
            </div>
        </div>
    </div>

    <!-- Floating mode switcher button -->
    <div class="mode-switcher">
        <div class="mode-buttons">
            <button class="mode-btn" onclick="setMode('auto')" title="Mode Auto (Responsive)" id="auto-btn">
                üì±üíª
            </button>
            <div class="mode-divider"></div>
            <button class="mode-btn" onclick="setMode('mobile')" title="Mode T√©l√©phone" id="mobile-btn">
                üì±
            </button>
            <div class="mode-divider"></div>
            <button class="mode-btn" onclick="setMode('desktop')" title="Mode Ordinateur" id="desktop-btn">
                üíª
            </button>
        </div>
    </div>

    <script>
        // --- DATA ---
        // Scenarios for the test, including standard and minigame types.
        const scenarios = [
            {
                id: 'scenario_1_start', // Unique ID for each scenario
                type: 'standard',
                title: "Lancement d'un Projet Strat√©gique Urgent",
                situation: "Votre entreprise, 'Innovatech Solutions', vient de d√©crocher un contrat majeur pour d√©velopper une nouvelle plateforme logicielle. La direction exige un prototype fonctionnel dans un d√©lai incroyablement court de six semaines, sous peine de perdre le contrat. Les ressources humaines et mat√©rielles sont d√©j√† sous tension. L'ambiance g√©n√©rale est un m√©lange d'excitation et d'appr√©hension.",
                question: "Face √† cette pression intense et √† ces attentes √©lev√©es, quelle est votre premi√®re action pour aborder ce d√©fi crucial ?",
                choices: [
                    { text: "Je convoque imm√©diatement une r√©union de mon √©quipe pour attribuer les r√¥les, d√©finir des jalons agressifs et insister sur la n√©cessit√© de travailler sans rel√¢che pour respecter la deadline. Je prends le contr√¥le total de la planification.", scores: { leader: 3, executor: 2, teamMorale: -5 }, consequences: { teamMorale: -10, projectQuality: 5, personalReputation: 5 }, nextScenarioId: 'scenario_2_leadership_challenge' },
                    { text: "Je me retire pour une analyse approfondie des sp√©cifications techniques, des ressources disponibles et des risques potentiels. Je pr√©pare un rapport d√©taill√© pour la direction, proposant des ajustements r√©alistes au calendrier ou aux attentes.", scores: { analyst: 3, strategist: 2, teamMorale: -5 }, consequences: { projectQuality: 10, teamMorale: -5, personalReputation: 5 }, nextScenarioId: 'scenario_2_analytical_deep_dive' },
                    { text: "J'organise un atelier de co-cr√©ation avec l'√©quipe pour stimuler des id√©es novatrices et trouver des approches non conventionnelles qui pourraient acc√©l√©rer le d√©veloppement sans sacrifier la qualit√©. L'objectif est de penser 'hors des sentiers battus'.", scores: { creative: 3, collaborator: 1, teamMorale: 5 }, consequences: { teamMorale: 5, projectQuality: 5, personalReputation: 5 }, nextScenarioId: 'scenario_2_creative_solution' },
                    { text: "Je m√®ne des entretiens individuels avec chaque membre de l'√©quipe pour √©valuer leurs comp√©tences, leurs pr√©f√©rences et leur charge de travail actuelle. Je cherche √† comprendre leurs pr√©occupations et √† r√©partir les t√¢ches de mani√®re √©quitable et motivante.", scores: { collaborator: 3, leader: 1, teamMorale: 10 }, consequences: { teamMorale: 15, projectQuality: 0, personalReputation: 10 }, nextScenarioId: 'scenario_2_collaborative_start' }
                ],
                funFact: "La gestion de projet moderne met l'accent sur la flexibilit√© et l'adaptation rapide aux changements, plut√¥t que sur une planification rigide initiale."
            },
            {
                id: 'scenario_2_leadership_challenge',
                type: 'standard',
                title: "G√©rer la R√©sistance et la D√©motivation",
                situation: (playerState) => {
                    if (playerState.teamMorale < 40) {
                        return "Votre approche directive a mis une pression consid√©rable sur l'√©quipe. Certains membres expriment ouvertement leur √©puisement et leur d√©motivation, craignant de ne pas pouvoir tenir le rythme. La productivit√© commence √† en p√¢tir et des tensions apparaissent.";
                    }
                    return "Bien que votre leadership ait mis les choses en mouvement rapidement, quelques membres de l'√©quipe semblent d√©pass√©s par la vitesse et la rigidit√© des directives. Ils montrent des signes de stress, mais l'√©quipe reste globalement engag√©e.";
                },
                question: "Comment r√©agissez-vous pour r√©tablir la coh√©sion et l'efficacit√©, tout en maintenant le cap sur l'objectif ?",
                choices: [
                    { text: "Je reconnais publiquement la difficult√© de la situation, puis je m'entretiens individuellement avec les membres cl√©s pour comprendre leurs blocages. Je propose un soutien personnalis√©, des ajustements mineurs si possible, et je r√©affirme ma confiance en leurs capacit√©s.", scores: { leader: 2, collaborator: 2, teamMorale: 10 }, consequences: { teamMorale: 10, personalReputation: 5 }, nextScenarioId: 'scenario_3_project_mid_phase' },
                    { text: "Je r√©it√®re l'importance cruciale de la deadline et les cons√©quences d'un √©chec. J'organise des sessions de travail intensives suppl√©mentaires et je mets en place un suivi quotidien strict pour s'assurer que chacun respecte les objectifs fix√©s, sans d√©vier du plan initial.", scores: { executor: 3, leader: 1, teamMorale: -10 }, consequences: { teamMorale: -10, personalReputation: -5 }, nextScenarioId: 'scenario_3_project_mid_phase' }
                ],
                funFact: "Un bon leader ne se contente pas de donner des ordres ; il inspire, soutient et adapte son style √† la situation et aux besoins de son √©quipe."
            },
            {
                id: 'scenario_2_analytical_deep_dive',
                type: 'standard',
                title: "Naviguer les Incertitudes Post-Analyse",
                situation: (playerState) => {
                    if (playerState.projectQuality > 70) {
                        return "Votre analyse approfondie a mis en lumi√®re des d√©fis techniques inattendus et des d√©pendances critiques. Vous avez une cartographie claire des obstacles, mais aussi des pistes solides pour les surmonter. La direction est impressionn√©e par votre rigueur.";
                    }
                    return "Votre analyse a r√©v√©l√© que le projet est bien plus complexe et risqu√© que pr√©vu. Des incertitudes majeures p√®sent sur la faisabilit√© technique et le respect des d√©lais. L'√©quipe est pr√©occup√©e par ces nouvelles informations.";
                },
                question: "Fort(e) de ces nouvelles informations, quelle strat√©gie adoptez-vous pour avancer ?",
                choices: [
                    { text: "Je pr√©pare une pr√©sentation concise et factuelle pour la direction, exposant les risques identifi√©s et proposant des options claires : soit plus de ressources, soit un ajustement de la deadline, soit une r√©duction du p√©rim√®tre. Je d√©fends ma position avec des donn√©es.", scores: { analyst: 2, strategist: 3, personalReputation: 5 }, consequences: { projectQuality: 10, personalReputation: 5 }, nextScenarioId: 'scenario_3_project_mid_phase' },
                    { text: "Je ne me contente pas de pr√©senter les probl√®mes. Je rassemble l'√©quipe pour un 'hackathon' interne, cherchant des solutions cr√©atives et des contournements techniques innovants pour minimiser l'impact des obstacles sans compromettre le calendrier ou demander des ressources suppl√©mentaires.", scores: { creative: 3, strategist: 2, teamMorale: 5 }, consequences: { projectQuality: 5, personalReputation: 10 }, nextScenarioId: 'scenario_3_project_mid_phase' }
                ],
                funFact: "La capacit√© √† transformer les probl√®mes en opportunit√©s est une marque de fabrique des esprits strat√©giques."
            },
            {
                id: 'scenario_2_creative_solution',
                type: 'standard',
                title: "Concr√©tiser l'Innovation",
                situation: "Votre atelier de co-cr√©ation a d√©bouch√© sur une multitude d'id√©es brillantes, certaines tr√®s audacieuses, d'autres plus pragmatiques. L'√©quipe est galvanis√©e par cette effervescence cr√©ative, mais un certain flou persiste sur la meilleure voie √† suivre pour concr√©tiser ces innovations dans le temps imparti.",
                question: "Comment transformez-vous cette √©nergie cr√©ative en un plan d'action concret et r√©alisable ?",
                choices: [
                    { text: "Je s√©lectionne l'id√©e la plus disruptive, celle qui a le plus grand potentiel de diff√©renciation, et je mobilise l'√©quipe pour un effort intensif, en acceptant un risque calcul√©. Je les encourage √† repousser les limites techniques.", scores: { creative: 3, leader: 2, projectQuality: 10 }, consequences: { projectQuality: 15, teamMorale: 5 }, nextScenarioId: 'scenario_3_project_mid_phase' },
                    { text: "Je facilite un processus de priorisation rigoureux pour √©valuer chaque id√©e en fonction de sa faisabilit√©, de son impact et de son alignement avec les objectifs du projet. Nous combinons les √©l√©ments les plus prometteurs pour cr√©er une approche √©quilibr√©e et robuste.", scores: { strategist: 3, creative: 1, projectQuality: 5 }, consequences: { projectQuality: 10, teamMorale: 0 }, nextScenarioId: 'scenario_3_project_mid_phase' }
                ],
                funFact: "L'innovation n'est pas seulement une question d'id√©es, mais aussi de capacit√© √† les ex√©cuter et √† les int√©grer efficacement."
            },
            {
                id: 'scenario_2_collaborative_start',
                type: 'standard',
                title: "Maintenir la Dynamique Collaborative",
                situation: "Gr√¢ce √† votre approche collaborative, l'√©quipe est unie et chaque membre se sent valoris√© et responsable de sa contribution. L'ambiance est excellente, la motivation est au z√©nith. Cependant, le temps est une ressource pr√©cieuse et la deadline approche √† grands pas. Il y a un risque de se perdre dans la bonne entente sans avancer suffisamment vite.",
                question: "Comment assurez-vous que cette excellente dynamique d'√©quipe se traduise par une progression rapide et efficace du projet ?",
                choices: [
                    { text: "Je mets en place des 'check-ins' quotidiens courts et cibl√©s pour suivre les progr√®s, identifier les blocages et r√©ajuster si n√©cessaire. Je m'assure que chacun est responsable de ses livrables et que le rythme est soutenu.", scores: { executor: 3, analyst: 2, projectQuality: 5 }, consequences: { projectQuality: 10, teamMorale: -5 }, nextScenarioId: 'scenario_3_project_mid_phase' },
                    { text: "Je continue de faire confiance √† l'autonomie de l'√©quipe, en me rendant disponible pour toute question ou aide. Je privil√©gie une communication ouverte et informelle, persuad√©(e) que la motivation intrins√®que et la bonne entente suffiront √† atteindre les objectifs.", scores: { collaborator: 3, leader: 1, teamMorale: 5 }, consequences: { teamMorale: 10, projectQuality: -5 }, nextScenarioId: 'scenario_3_project_mid_phase' }
                ],
                funFact: "La confiance est un levier puissant en √©quipe, mais elle doit √™tre √©quilibr√©e par la responsabilit√© et une gestion proactive des attentes."
            },
            {
                id: 'scenario_3_project_mid_phase', // Common scenario, but content/choices might vary based on previous state
                type: 'standard',
                title: "Gestion d'un Impr√©vu Critique en Cours de Projet",
                situation: (playerState) => {
                    let situationText = "En pleine phase d'ex√©cution du projet, un fournisseur cl√© annonce un retard significatif sur la livraison d'un composant essentiel. Cela menace directement le calendrier et la qualit√© du prototype. L'√©quipe est sous le choc.";
                    if (playerState.teamMorale > 60) {
                        situationText = "Malgr√© le coup dur du retard fournisseur, l'√©quipe, forte de sa coh√©sion, reste relativement calme et cherche d√©j√† des solutions. La bonne ambiance aide √† absorber le choc.";
                    } else if (playerState.teamMorale < 40) {
                        situationText = "Le moral de l'√©quipe, d√©j√† bas, s'effondre avec cette nouvelle. La communication devient chaotique, et la productivit√© chute drastiquement. Certains membres envisagent m√™me de quitter le projet.";
                    }
                    if (playerState.projectQuality < 40) {
                        situationText += " La qualit√© des livrables actuels est d√©j√† remise en question, et ce retard ne fait qu'aggraver la situation.";
                    }
                    return situationText;
                },
                question: "Face √† cet impr√©vu majeur, comment r√©agissez-vous pour minimiser l'impact et maintenir le projet sur les rails ?",
                choices: [
                    { text: "J'organise imm√©diatement une cellule de crise avec les membres cl√©s de l'√©quipe pour un brainstorming intensif. Nous explorons collectivement toutes les options : fournisseurs alternatifs, solutions techniques de contournement, ou r√©ajustement du planning. L'objectif est de trouver une solution collective et rapide.", scores: { collaborator: 3, creative: 2, teamMorale: 5 }, consequences: { teamMorale: 5, projectQuality: 5 } },
                    { text: "Je prends en charge l'analyse compl√®te de l'impact du retard. Je contacte le fournisseur pour comprendre la situation, √©value les alternatives et pr√©pare un plan d'urgence d√©taill√© pour la direction. Je pr√©f√®re travailler seul(e) sur cette phase critique pour garantir l'objectivit√©.", scores: { analyst: 3, strategist: 2, personalReputation: 5 }, consequences: { projectQuality: 10 } },
                    { text: "Je prends une d√©cision rapide et audacieuse : soit nous changeons de fournisseur imm√©diatement (m√™me si c'est plus cher), soit nous simplifions drastiquement le prototype pour respecter la deadline. Je communique ma d√©cision avec fermet√© √† l'√©quipe et √† la direction, exigeant une ex√©cution rapide.", scores: { leader: 3, executor: 2, teamMorale: -5 }, consequences: { teamMorale: -5, projectQuality: 0 } }
                ],
                funFact: "La capacit√© √† s'adapter et √† pivoter rapidement face √† l'adversit√© est une comp√©tence inestimable dans le monde professionnel, souvent plus importante que la planification initiale."
            },
            {
                id: 'scenario_4_client_feedback',
                type: 'email',
                from: "Client Principal (Mme Dubois) <dubois.client@partenaire.com>",
                subject: "Retour Urgent : Avancement et Qualit√© du Prototype",
                body: (playerState) => {
                    if (playerState.projectQuality > 70) {
                        return "Cher(e) [Votre Nom],<br><br>Je tiens √† vous exprimer ma sinc√®re satisfaction concernant l'avancement de la plateforme. Les livrables de la phase actuelle sont d'une qualit√© exceptionnelle et d√©passent nos attentes initiales. Votre √©quipe fait un travail remarquable. Continuez sur cette lanc√©e !<br><br>Cordialement,<br>Mme Dubois";
                    } else if (playerState.projectQuality < 40) {
                        return "Cher(e) [Votre Nom],<br><br>Je suis profond√©ment pr√©occup√©e par la qualit√© des derniers livrables que nous avons re√ßus. Plusieurs fonctionnalit√©s ne sont pas conformes aux sp√©cifications, et l'interface utilisateur pr√©sente des lacunes importantes. Nous devons imp√©rativement revoir ces points. Pourriez-vous me proposer une solution rapide et concr√®te ?<br><br>Dans l'attente de votre retour,<br>Mme Dubois";
                    }
                    return "Cher(e) [Votre Nom],<br><br>Je voulais faire un point sur la phase actuelle du projet. J'ai quelques retours constructifs √† vous faire concernant les derni√®res livraisons. Rien d'alarmant, mais il y a des ajustements √† pr√©voir. Pourriez-vous me contacter pour en discuter ?<br><br>Merci,<br>Mme Dubois";
                },
                question: "Comment formulez-vous votre r√©ponse √† cet e-mail, sachant l'importance de maintenir une bonne relation client ?",
                choices: [
                    { text: "Je propose une r√©union virtuelle imm√©diate pour discuter en d√©tail de ses retours, qu'ils soient positifs ou n√©gatifs. Mon objectif est de rassurer le client, de montrer notre r√©activit√© et de recueillir plus d'informations en direct.", scores: { collaborator: 2, leader: 2, personalReputation: 5 }, consequences: { personalReputation: 10, teamMorale: 5 }, nextScenarioId: 'scenario_5_meeting_client' },
                    { text: "Je r√©ponds par √©crit, de mani√®re concise et professionnelle. Si les retours sont n√©gatifs, je d√©taille les actions correctives sp√©cifiques d√©j√† mises en ≈ìuvre ou planifi√©es, avec des √©ch√©ances claires. Si les retours sont positifs, je la remercie et confirme notre engagement.", scores: { analyst: 2, executor: 2, projectQuality: 5 }, consequences: { projectQuality: 5, personalReputation: 5 }, nextScenarioId: 'scenario_5_meeting_client' }
                ],
                funFact: "La rapidit√© et la clart√© de la communication sont des facteurs cl√©s de la satisfaction client, m√™me en cas de probl√®me."
            },
            {
                id: 'scenario_5_meeting_client',
                type: 'meeting',
                title: "R√©union Strat√©gique avec le Client Principal",
                avatar: "üßë‚Äçüíº",
                dialogue: (playerState) => {
                    if (playerState.projectQuality > 70) {
                        return "Mme Dubois: 'Votre travail est absolument remarquable. La plateforme d√©passe mes attentes et je suis impressionn√©e par la r√©activit√© et le professionnalisme de votre √©quipe. J'ai pleine confiance en vous pour la suite du d√©ploiement !' (Elle sourit chaleureusement)";
                    } else if (playerState.projectQuality < 40) {
                        return "Mme Dubois: 'Je suis vraiment d√©√ßue par la tournure des √©v√©nements. Les probl√®mes persistants sur la qualit√© mettent en p√©ril notre calendrier de lancement. Nous devons trouver des solutions CRITIQUES et RAPIDES pour redresser la barre, sinon nous devrons reconsid√©rer notre partenariat.' (Son ton est ferme et son visage, ferm√©)";
                    }
                    return "Mme Dubois: 'Merci d'avoir organis√© cette r√©union. Comme mentionn√© dans mon e-mail, nous avons des points √† am√©liorer sur la plateforme. Je suis s√ªre que nous pouvons y arriver ensemble, mais j'aimerais comprendre votre plan d'action pour ces ajustements.' (Son ton est neutre, mais l'attente est palpable)";
                },
                question: "Comment g√©rez-vous cette discussion cruciale avec le client pour maintenir ou renforcer la relation ?",
                choices: [
                    { text: "J'√©coute attentivement chaque pr√©occupation, valide ses sentiments, puis je pr√©sente un plan d'action concret et imm√©diat, avec des responsabilit√©s claires et des √©ch√©ances r√©vis√©es. Je m'engage personnellement √† superviser les corrections.", scores: { leader: 3, executor: 2, personalReputation: 10 }, consequences: { projectQuality: 10, personalReputation: 10 } },
                    { text: "Je pr√©sente une analyse d√©taill√©e des causes profondes des probl√®mes, avec des donn√©es √† l'appui. Je propose plusieurs options strat√©giques pour r√©soudre les lacunes, en soulignant les efforts d√©j√† d√©ploy√©s par l'√©quipe et en demandant son avis sur la meilleure voie √† suivre.", scores: { analyst: 3, strategist: 2, projectQuality: 5 }, consequences: { projectQuality: 5, personalReputation: 5 } },
                    { text: "Je mets l'accent sur la force de notre collaboration. Je propose de former un groupe de travail conjoint avec ses √©quipes pour co-construire les solutions, en insistant sur le partenariat et la transparence pour surmonter les d√©fis ensemble.", scores: { collaborator: 3, creative: 1, teamMorale: 5 }, consequences: { teamMorale: 5, personalReputation: 5 } }
                ],
                funFact: "Une gestion proactive des attentes et une √©coute active sont essentielles pour transformer un client insatisfait en un partenaire fid√®le."
            },
            {
                id: 'scenario_6_team_challenge',
                type: 'standard',
                title: "Crise d'√âquipe : Absent√©isme et Surcharge de Travail",
                situation: (playerState) => {
                    if (playerState.teamMorale < 40) {
                        return "La situation est critique. Non seulement un membre cl√© de votre √©quipe est en arr√™t maladie prolong√©, mais deux autres sont √©galement absents pour des raisons personnelles. La charge de travail est devenue intenable pour les personnes restantes, qui sont √©puis√©es et d√©motiv√©es. Des rumeurs de d√©mission circulent, mena√ßant l'ach√®vement du projet.";
                    }
                    return "Un membre cl√© de l'√©quipe est en arr√™t maladie prolong√©, ce qui augmente consid√©rablement la charge de travail des autres. Bien que l'√©quipe soit r√©siliente et comprenne la situation, la fatigue commence √† se faire sentir et le risque de 'burnout' est r√©el. Ils ont besoin de soutien imm√©diat.";
                },
                question: "Comment agissez-vous pour soulager la pression sur l'√©quipe, maintenir le moral et assurer la continuit√© du projet ?",
                choices: [
                    { text: "Je redistribue imm√©diatement les t√¢ches les plus urgentes parmi les membres disponibles, en prenant personnellement en charge une part significative du travail. J'organise des points r√©guliers pour m'assurer que personne n'est submerg√© et j'offre un soutien moral constant.", scores: { leader: 3, collaborator: 2, teamMorale: 10 }, consequences: { teamMorale: 15, personalReputation: 10 } },
                    { text: "Je contacte la direction pour demander des renforts temporaires (freelances, transfert d'autres √©quipes) ou un ajustement des priorit√©s du projet. Je pr√©sente une analyse de l'impact du sous-effectif sur les d√©lais et la qualit√© pour justifier ma demande.", scores: { strategist: 3, analyst: 2, projectQuality: 10 }, consequences: { projectQuality: 10 } },
                    { text: "J'organise une activit√© de 'team-building' ou un √©v√©nement social pour permettre √† l'√©quipe de d√©compresser et de se ressourcer. Ensuite, nous r√©√©valuons ensemble les priorit√©s et trouvons des solutions cr√©atives pour all√©ger la charge, en privil√©giant le bien-√™tre collectif.", scores: { collaborator: 3, creative: 1, teamMorale: 15 }, consequences: { teamMorale: 20 } }
                ],
                funFact: "Le bien-√™tre des employ√©s est directement corr√©l√© √† leur productivit√© et √† leur fid√©lit√© √† l'entreprise. Ignorer le 'burnout' peut avoir des cons√©quences d√©sastreuses."
            },
            {
                id: 'scenario_7_innovation_opportunity',
                type: 'standard',
                title: "Opportunit√© d'Innovation Disruptive",
                situation: (playerState) => {
                    if (playerState.projectQuality > 70) {
                        return "Le prototype de la plateforme est stable et fonctionne au-del√† des attentes. C'est le moment id√©al pour explorer une nouvelle technologie d'intelligence artificielle qui pourrait non seulement am√©liorer drastiquement les performances, mais aussi ouvrir de nouveaux march√©s. C'est une opportunit√© disruptive, mais elle implique un investissement significatif en temps et en ressources.";
                    }
                    return "Le projet avance, mais reste dans les clous des attentes initiales. Une nouvelle technologie prometteuse √©merge, capable d'apporter une valeur ajout√©e significative. Cependant, son int√©gration pourrait d√©stabiliser le calendrier actuel et introduire des risques techniques. L'√©quipe est divis√©e sur l'opportunit√© de la poursuivre.";
                },
                question: "Face √† cette opportunit√© d'innovation √† fort potentiel mais aussi √† fort risque, quelle est votre d√©cision strat√©gique ?",
                choices: [
                    { text: "Oui, je propose de d√©dier une petite √©quipe √† la R&D pour un 'proof of concept' rapide de cette technologie. Je suis convaincu(e) que le potentiel de diff√©renciation justifie le risque et l'investissement. Je pr√©sente un business case audacieux √† la direction.", scores: { creative: 3, strategist: 2, projectQuality: 10 }, consequences: { projectQuality: 15, teamMorale: 5 }, nextScenarioId: 'scenario_8_resource_allocation_advanced' },
                    { text: "Non, je pr√©f√®re maintenir le cap sur la finalisation du prototype actuel. L'int√©gration de nouvelles technologies pourrait compromettre la deadline et la stabilit√© du produit. Je propose de mettre cette innovation en 'backlog' pour un futur projet, une fois le prototype livr√© avec succ√®s.", scores: { executor: 3, analyst: 2, projectQuality: 5 }, consequences: { projectQuality: 5, personalReputation: 5 }, nextScenarioId: 'scenario_9_final_review' }
                ],
                funFact: "Les entreprises qui r√©ussissent √† innover sont celles qui savent √©quilibrer la prise de risque et la gestion de l'ex√©cution, souvent en testant de nouvelles id√©es √† petite √©chelle."
            },
            {
                id: 'scenario_8_resource_allocation_advanced', // New mini-game type
                type: 'resource_allocation',
                title: "Allocation Budg√©taire Strat√©gique pour l'Expansion",
                situation: "Suite √† l'approbation de votre initiative d'innovation, la direction vous alloue un budget suppl√©mentaire de 100 unit√©s pour la prochaine phase. Votre d√©fi est de r√©partir ces fonds entre les d√©partements cl√©s pour maximiser la croissance et l'impact de la nouvelle plateforme. Chaque d√©cision aura des r√©percussions sur la performance globale de l'entreprise.",
                departments: [
                    { id: 'r_d', name: 'Recherche & D√©veloppement (Innovation)', traits: { creative: 1.5, strategist: 1, projectQuality: 2, teamMorale: 1 } },
                    { id: 'marketing', name: 'Marketing & Ventes (Acquisition Clients)', traits: { leader: 1.5, creative: 1, personalReputation: 2, projectQuality: 0.5 } },
                    { id: 'operations', name: 'Op√©rations & Logistique (Stabilit√©/Efficacit√©)', traits: { executor: 1.5, analyst: 1, projectQuality: 1.5, teamMorale: 0.5 } },
                    { id: 'support', name: 'Support Client & Relations (Fid√©lisation)', traits: { collaborator: 1.5, analyst: 1, teamMorale: 1.5, personalReputation: 1 } }
                ],
                funFact: "Une allocation budg√©taire √©quilibr√©e est la cl√© de la croissance durable d'une entreprise, car elle soutient √† la fois l'innovation, l'acquisition, l'efficacit√© et la fid√©lisation.",
                nextScenarioId: 'scenario_9_final_review'
            },
            {
                id: 'scenario_9_final_review',
                type: 'standard',
                title: "Pr√©sentation Finale du Prototype : Le Moment de V√©rit√©",
                situation: (playerState) => {
                    let situationText = "Le jour de la pr√©sentation finale du prototype √† la direction et aux investisseurs est arriv√©. C'est l'aboutissement de semaines de travail intense. La tension est palpable, car l'avenir du projet, et potentiellement de votre carri√®re, d√©pend de cette d√©monstration.";
                    if (playerState.projectQuality > 80) {
                        situationText = "Le prototype est un chef-d'≈ìuvre de technologie et de design. Il fonctionne parfaitement, d√©passe les sp√©cifications initiales et int√®gre m√™me des fonctionnalit√©s innovantes. L'√©quipe est confiante, et l'ambiance est √† l'euphorie. C'est un succ√®s retentissant.";
                    } else if (playerState.projectQuality < 50) {
                        situationText = "Le prototype pr√©sente encore des bugs mineurs, et certaines fonctionnalit√©s cl√©s ne sont pas aussi fluides que pr√©vu. La qualit√© est mitig√©e, et vous savez que la pr√©sentation sera difficile. La pression est immense.";
                    }
                    return situationText;
                },
                question: "Comment abordez-vous cette pr√©sentation cruciale pour maximiser l'impact et la perception de votre travail ?",
                choices: [
                    { text: "Je prends les devants, pr√©sentant le prototype avec assurance et enthousiasme. Je mets en avant les succ√®s de l'√©quipe, les d√©fis surmont√©s et les le√ßons apprises, en projetant une vision positive et ambitieuse pour l'avenir du produit. Je suis le principal orateur.", scores: { leader: 3, collaborator: 2, personalReputation: 10 }, consequences: { personalReputation: 15 } },
                    { text: "Je pr√©sente une analyse honn√™te et transparente des r√©sultats, incluant les r√©ussites et les points faibles. Je soutiens mes propos avec des donn√©es pr√©cises, des d√©monstrations cibl√©es et des recommandations claires pour les prochaines √©tapes. Je suis pr√™t(e) √† r√©pondre √† toutes les questions techniques.", scores: { analyst: 3, strategist: 2, projectQuality: 5 }, consequences: { personalReputation: 10 } },
                    { text: "Je ne me contente pas de montrer le prototype ; je raconte l'histoire de sa cr√©ation, en insistant sur la vision initiale et les innovations futures. Je propose une d√©monstration interactive, invitant le public √† imaginer les possibilit√©s, m√™me si les r√©sultats actuels sont imparfaits. Je mise sur l'√©motion et le potentiel.", scores: { creative: 3, strategist: 1, personalReputation: 5 }, consequences: { personalReputation: 5 } }
                ],
                funFact: "Une pr√©sentation r√©ussie ne se limite pas √† la d√©monstration d'un produit ; elle raconte une histoire, transmet une vision et inspire confiance."
            },
            {
                id: 'scenario_10_unexpected_offer',
                type: 'phone',
                caller: "Recruteur Externe (M. Dupont) - 'Talent Connect'",
                number: "+33 6 12 34 56 78",
                action: "Alors que vous √™tes en pleine r√©flexion sur votre avenir professionnel, votre t√©l√©phone sonne. C'est un recruteur de renom qui vous appelle pour une opportunit√© inattendue : un poste de direction avec des responsabilit√©s accrues et un salaire tr√®s attractif dans une entreprise concurrente. L'offre est all√©chante, mais vous √™tes actuellement engag√©(e) dans un projet important.",
                question: "Comment g√©rez-vous cet appel inattendu, tout en prot√©geant vos int√©r√™ts et votre r√©putation ?",
                choices: [
                    { text: "J'√©coute attentivement la proposition, pose des questions pr√©cises sur le r√¥le, l'entreprise et les d√©fis. Je montre un int√©r√™t professionnel sans m'engager, expliquant que je suis actuellement concentr√©(e) sur un projet, mais que je suis ouvert(e) √† en discuter plus tard.", scores: { strategist: 2, creative: 2, personalReputation: 5 }, consequences: { personalReputation: 5 } },
                    { text: "Je d√©cline poliment l'offre, en expliquant que ma loyaut√© est envers mon √©quipe et mon projet actuel. Je ne souhaite pas cr√©er de distraction ni de conflit d'int√©r√™ts. Je remercie le recruteur pour son temps.", scores: { collaborator: 3, executor: 1, teamMorale: 5 }, consequences: { teamMorale: 5 } },
                    { text: "Je demande imm√©diatement plus de d√©tails sur les responsabilit√©s de leadership, le potentiel d'impact et la vision strat√©gique du poste. Je suis pr√™t(e) √† envisager un entretien rapidement si le r√¥le correspond √† mes ambitions de carri√®re.", scores: { leader: 3, analyst: 1, personalReputation: 5 }, consequences: { personalReputation: 10 } }
                ],
                funFact: "Le 'networking' passif, o√π les opportunit√©s viennent √† vous, est souvent le signe d'une forte r√©putation professionnelle et d'un march√© du travail dynamique."
            },
            {
                id: 'scenario_11_team_celebration',
                type: 'standard',
                title: "C√©l√©bration du Succ√®s du Projet : Renforcer les Liens",
                situation: (playerState) => {
                    if (playerState.teamMorale > 80) {
                        return "Le projet est un succ√®s √©clatant, et l'√©quipe est en pleine euphorie. Une grande c√©l√©bration est organis√©e pour marquer cet accomplissement collectif. L'ambiance est festive, et chacun se sent fier de sa contribution. C'est le moment id√©al pour renforcer les liens et la reconnaissance.";
                    }
                    return "Le projet est termin√©, non sans quelques difficult√©s, mais il est livr√©. L'√©quipe est fatigu√©e mais satisfaite d'en avoir vu le bout. Une petite c√©l√©bration est organis√©e pour remercier chacun de ses efforts, mais l'√©nergie est plus mesur√©e.";
                },
                question: "Lors de cette c√©l√©bration, comment choisissez-vous de participer pour maximiser l'impact positif sur l'√©quipe et votre propre image ?",
                choices: [
                    { text: "J'organise un discours de remerciement sinc√®re, mettant en lumi√®re les contributions individuelles et collectives. Je propose des activit√©s de 'team-building' ludiques pour renforcer la coh√©sion et cr√©er des souvenirs m√©morables.", scores: { collaborator: 3, leader: 2, teamMorale: 10 }, consequences: { teamMorale: 15, personalReputation: 5 } },
                    { text: "Je profite de l'occasion pour discuter informellement avec chaque membre de l'√©quipe. J'√©coute leurs retours sur le projet, leurs aspirations futures, et je leur offre des conseils personnalis√©s. Je privil√©gie les √©changes en profondeur.", scores: { collaborator: 2, analyst: 1, personalReputation: 5 }, consequences: { teamMorale: 10, personalReputation: 5 } },
                    { text: "Je suis pr√©sent(e) et je participe aux festivit√©s, mais je reste en retrait, observant les interactions. Je prends mentalement des notes sur les dynamiques d'√©quipe, les forces et les faiblesses, planifiant d√©j√† comment optimiser les prochains projets. Mon esprit est d√©j√† tourn√© vers l'avenir.", scores: { strategist: 2, executor: 1, projectQuality: 5 }, consequences: { personalReputation: 0 } }
                ],
                funFact: "La reconnaissance et la c√©l√©bration des succ√®s sont des moteurs puissants de la motivation et de la r√©tention des talents en entreprise."
            },
            {
                id: 'scenario_12_personal_development',
                type: 'standard',
                title: "Investir dans votre D√©veloppement Professionnel",
                situation: "Le projet est termin√©, et vous avez une p√©riode de relative accalmie. Votre entreprise propose un budget pour le d√©veloppement professionnel et vous avez la possibilit√© de suivre une formation intensive ou de d√©velopper une nouvelle comp√©tence cl√©. C'est une opportunit√© d'investir en vous-m√™me.",
                question: "Pour maximiser votre impact futur et votre croissance de carri√®re, quelle voie de d√©veloppement choisissez-vous ?",
                choices: [
                    { text: "Une formation avanc√©e en 'Leadership Transformationnel' pour affiner mes comp√©tences en gestion d'√©quipes complexes, en motivation et en conduite du changement. Mon objectif est d'inspirer et de guider des projets de grande envergure.", scores: { leader: 3, strategist: 2, personalReputation: 10 }, consequences: { personalReputation: 10 } },
                    { text: "Un cours certifiant sur les 'Big Data Analytics' et l'apprentissage automatique. Je souhaite approfondir mon expertise en analyse de donn√©es pour prendre des d√©cisions plus √©clair√©es et identifier de nouvelles opportunit√©s business.", scores: { analyst: 3, executor: 1, projectQuality: 5 }, consequences: { projectQuality: 5 } },
                    { text: "Un atelier intensif sur la 'Pens√©e Design' et l'innovation disruptive. Je veux stimuler ma cr√©ativit√©, apprendre √† g√©n√©rer des id√©es radicalement nouvelles et √† les transformer en solutions concr√®tes pour les probl√®mes complexes.", scores: { creative: 3, collaborator: 1, teamMorale: 5 }, consequences: { teamMorale: 5 } }
                ],
                funFact: "L'apprentissage continu n'est plus une option, mais une n√©cessit√©. Les professionnels qui investissent dans leurs comp√©tences sont plus adaptables et r√©silients face aux √©volutions du march√© du travail."
            },
            {
                id: 'scenario_13_difficult_feedback',
                type: 'meeting',
                title: "Donner un Feedback Constructif Difficile",
                avatar: "üòê",
                dialogue: "Vous avez remarqu√© que les performances d'un membre cl√© de votre √©quipe, un d√©veloppeur talentueux mais r√©cemment distrait, ont consid√©rablement baiss√©. Cela commence √† impacter le calendrier du projet. Vous devez avoir une conversation d√©licate avec lui pour aborder le probl√®me de mani√®re constructive.",
                question: "Comment pr√©parez-vous et menez-vous cette conversation pour qu'elle soit efficace et respectueuse ?",
                choices: [
                    { text: "Je rassemble des exemples concrets et factuels de la baisse de performance. Je pr√©pare un plan d'am√©lioration clair avec des objectifs mesurables et des √©tapes de suivi. Mon approche est directe et ax√©e sur les r√©sultats.", scores: { analyst: 3, executor: 2, projectQuality: 5 }, consequences: { projectQuality: 5, personalReputation: 0 } },
                    { text: "Je commence par exprimer ma reconnaissance pour ses contributions pass√©es, puis j'exprime mes pr√©occupations en me concentrant sur l'impact de la situation sur l'√©quipe et le projet. Je l'invite √† partager sa perspective et nous cherchons ensemble des solutions, en offrant mon soutien.", scores: { collaborator: 3, leader: 2, teamMorale: 5 }, consequences: { teamMorale: 5, personalReputation: 5 } },
                    { text: "J'aborde la conversation en me concentrant sur les solutions possibles et le soutien que je peux offrir. Je propose des ressources (formation, mentorat) ou des ajustements de charge de travail pour l'aider √† retrouver sa motivation et son efficacit√©. Je privil√©gie une approche ax√©e sur le potentiel.", scores: { creative: 2, collaborator: 3, teamMorale: 10 }, consequences: { teamMorale: 10, personalReputation: 5 } }
                ],
                funFact: "Le feedback est un cadeau, m√™me lorsqu'il est difficile √† donner ou √† recevoir. Il est essentiel pour le d√©veloppement professionnel et la performance des √©quipes."
            },
            {
                id: 'scenario_14_future_vision',
                type: 'standard',
                title: "Contribuer √† la Vision Strat√©gique de l'Entreprise",
                situation: "Votre direction vous invite √† faire partie d'un comit√© strat√©gique charg√© de d√©finir la vision et les grandes orientations de l'entreprise pour les cinq prochaines ann√©es. C'est une opportunit√© unique d'influencer l'avenir de 'Innovatech Solutions' et de laisser votre empreinte.",
                question: "Quelle approche adoptez-vous pour contribuer efficacement √† l'√©laboration de cette vision strat√©gique ?",
                choices: [
                    { text: "Je m'appuie sur une analyse approfondie des tendances du march√©, des donn√©es √©conomiques, des performances des concurrents et des capacit√©s internes de l'entreprise. Ma proposition sera bas√©e sur des faits solides et des projections r√©alistes.", scores: { analyst: 3, strategist: 3, projectQuality: 10 }, consequences: { personalReputation: 10 } },
                    { text: "Je propose des id√©es audacieuses et disruptives, imaginant des sc√©narios futurs qui pourraient positionner l'entreprise en leader incontest√© sur de nouveaux march√©s. Je cherche √† inspirer et √† d√©fier le statu quo, m√™me si cela implique des risques.", scores: { creative: 3, leader: 3, personalReputation: 10 }, consequences: { personalReputation: 10 } },
                    { text: "J'organise des ateliers de consultation avec des employ√©s de tous les niveaux, des clients cl√©s et des partenaires. Je recueille une diversit√© de perspectives pour construire une vision inclusive et f√©d√©ratrice qui refl√®te les aspirations de toutes les parties prenantes.", scores: { collaborator: 3, strategist: 2, teamMorale: 10 }, consequences: { teamMorale: 10, personalReputation: 5 } }
                ],
                funFact: "Une vision d'entreprise forte n'est pas seulement un slogan ; c'est une boussole qui guide toutes les d√©cisions, de la strat√©gie au quotidien, et motive les employ√©s."
            }
        ];

        // Map scenario IDs to their indices for quick lookup
        const scenarioMap = new Map(scenarios.map((s, index) => [s.id, index]));

        // Personality profiles and their descriptions.
        const profiles = {
            leader: {
                name: "Le Leader Inspirant",
                description: "Vous √™tes un moteur pour votre √©quipe, capable de motiver et de diriger avec confiance. Vous prenez des d√©cisions rapidement et n'h√©sitez pas √† prendre des initiatives. Votre pr√©sence est rassurante et vous savez galvaniser les troupes pour atteindre des objectifs ambitieux.",
                icon: "üëë",
                color: "#dc3545",
                strengths: [
                    "Vision strat√©gique et direction claire",
                    "Capacit√© √† motiver et √† d√©l√©guer efficacement",
                    "Prise de d√©cision rapide et assum√©e",
                    "Confiance en soi et r√©silience face √† la pression"
                ],
                idealRoles: "Manager, Chef de projet s√©nior, Entrepreneur, Directeur de d√©partement, CEO.",
                developmentAdvice: "Continuez √† d√©l√©guer efficacement et √† d√©velopper l'autonomie de votre √©quipe. Apprenez √† √©couter activement les feedbacks, m√™me critiques, pour renforcer la coh√©sion et √©viter l'√©puisement de vos collaborateurs. La vuln√©rabilit√© peut aussi √™tre une force."
            },
            analyst: {
                name: "L'Analyste Rigoureux",
                description: "Vous excellez dans l'analyse des donn√©es, la d√©tection des probl√®mes complexes et la proposition de solutions logiques. Votre approche est factuelle, m√©thodique et vous ne laissez rien au hasard, assurant la robustesse des d√©cisions.",
                icon: "üî¨",
                color: "#007bff",
                strengths: [
                    "Pens√©e critique et r√©solution de probl√®mes complexes",
                    "Attention aux d√©tails et rigueur m√©thodologique",
                    "Capacit√© √† synth√©tiser des informations volumineuses",
                    "Objectivit√© et prise de d√©cision bas√©e sur les faits"
                ],
                idealRoles: "Analyste de donn√©es, Consultant en strat√©gie, Auditeur, Chercheur, Ing√©nieur R&D, Sp√©cialiste BI.",
                developmentAdvice: "Travaillez sur la communication de vos analyses de mani√®re plus accessible et engageante pour un public non-expert. D√©veloppez votre intelligence √©motionnelle pour mieux prendre en compte les facteurs humains dans vos recommandations."
            },
            creative: {
                name: "Le Cr√©atif Visionnaire",
                description: "Vous apportez des id√©es nouvelles et originales, transformant les d√©fis en opportunit√©s d'innovation. Vous √™tes √† l'aise avec l'ambigu√Øt√©, aimez explorer de nouvelles voies et inspirer les autres √† penser diff√©remment.",
                icon: "üé®",
                color: "#6f42c1",
                strengths: [
                    "Innovation et pens√©e divergente",
                    "Capacit√© √† g√©n√©rer des solutions originales",
                    "Adaptabilit√© et ouverture au changement",
                    "Inspiration et stimulation de la cr√©ativit√© collective"
                ],
                idealRoles: "Designer UX/UI, Marketeur strat√©gique, Innovateur produit, Chef de projet R&D, Consultant en innovation.",
                developmentAdvice: "Apprenez √† structurer vos id√©es pour les pr√©senter de mani√®re plus convaincante et √† les rendre plus concr√®tes. Collaborez avec des profils plus orient√©s ex√©cution pour transformer vos visions en r√©alisations tangibles."
            },
            collaborator: {
                name: "Le Collaborateur Connecteur",
                description: "Vous excellez dans le travail d'√©quipe et la cr√©ation de liens solides. Vous √™tes empathique, √† l'√©coute et favorisez un environnement de travail harmonieux, inclusif et productif, o√π chacun se sent valoris√©.",
                icon: "ü§ù",
                color: "#28a744",
                strengths: [
                    "Esprit d'√©quipe et facilitation des synergies",
                    "Excellente communication interpersonnelle et √©coute active",
                    "Capacit√© √† r√©soudre les conflits et √† m√©diatiser",
                    "Empathie et intelligence √©motionnelle"
                ],
                idealRoles: "Chef d'√©quipe, Responsable RH, Formateur, Facilitateur, Responsable de la relation client, Scrum Master.",
                developmentAdvice: "D√©veloppez votre capacit√© √† prendre des d√©cisions fermes lorsque n√©cessaire, m√™me si elles sont impopulaires. Apprenez √† g√©rer les conflits de mani√®re assertive, sans compromettre vos propres besoins ou ceux du projet."
            },
            strategist: {
                name: "Le Strat√®ge Visionnaire",
                description: "Vous avez une vision √† long terme et √™tes capable de concevoir des plans complexes pour atteindre des objectifs ambitieux. Vous anticipez les d√©fis, identifiez les opportunit√©s et positionnez l'entreprise pour le succ√®s futur.",
                icon: "‚ôüÔ∏è",
                color: "#6610f2",
                strengths: [
                    "Planification strat√©gique et vision √† long terme",
                    "Anticipation des risques et des opportunit√©s",
                    "Pens√©e syst√©mique et compr√©hension des interconnexions",
                    "Capacit√© √† d√©finir des objectifs clairs et r√©alisables"
                ],
                idealRoles: "Consultant en strat√©gie, Directeur de la strat√©gie, Chef de produit, Urbaniste, Architecte d'entreprise.",
                developmentAdvice: "Concentrez-vous sur la mise en ≈ìuvre concr√®te de vos strat√©gies et la capacit√© √† les communiquer de mani√®re inspirante aux √©quipes op√©rationnelles. √âvitez la 'paralyse par l'analyse' en vous engageant plus rapidement dans l'action."
            },
            executor: {
                name: "L'Ex√©cuteur Efficace",
                description: "Vous √™tes r√©solument orient√©(e) action et r√©sultats. Vous aimez concr√©tiser les projets, respecter les d√©lais et optimiser les processus pour une efficacit√© maximale, transformant les plans en r√©alisations.",
                icon: "‚öôÔ∏è",
                color: "#fd7e14",
                strengths: [
                    "Orientation r√©sultats et ex√©cution rigoureuse",
                    "Organisation et gestion du temps exemplaires",
                    "Capacit√© √† prioriser et √† livrer sous pression",
                    "Pragmatisme et efficacit√© op√©rationnelle"
                ],
                idealRoles: "Chef d'op√©rations, Responsable logistique, Chef de projet technique, Coordinateur de programme, Responsable de production.",
                developmentAdvice: "Prenez du recul pour √©valuer l'impact √† long terme de vos actions et n'h√©sitez pas √† explorer des solutions moins conventionnelles. D√©veloppez votre capacit√© √† d√©l√©guer et √† faire confiance √† votre √©quipe pour les t√¢ches d'ex√©cution."
            }
        };

        // --- STATE VARIABLES ---
        let currentScenarioIndex = 0;
        // Stores the responses for each scenario, including chosen scores or allocation values, and the playerState at that point.
        // This is crucial for the "goBack" functionality in a branching path.
        let scenarioResponses = []; 
        // Initial player state values. These will be modified by consequences.
        let playerState = {
            teamMorale: 50, // Initial morale
            projectQuality: 50, // Initial project quality
            personalReputation: 50 // Initial personal reputation
        };
        // Initialize scores for each personality trait to 0.
        const userScores = {
            leader: 0,
            analyst: 0,
            creative: 0,
            collaborator: 0,
            strategist: 0,
            executor: 0
        };

        // --- DOM ELEMENTS ---
        const welcomeScreen = document.getElementById('welcome');
        const testScreen = document.getElementById('test');
        const resultsScreen = document.getElementById('results');

        const scenarioCounter = document.getElementById('scenario-counter');
        const progressText = document.getElementById('progress-text');
        const progressFill = document.getElementById('progress-fill');

        // Player state indicators
        const teamMoraleBar = document.getElementById('team-morale-bar');
        const teamMoraleValue = document.getElementById('team-morale-value');
        const teamMoraleEmoji = document.getElementById('team-morale-emoji');
        const projectQualityBar = document.getElementById('project-quality-bar');
        const projectQualityValue = document.getElementById('project-quality-value');
        const projectQualityEmoji = document.getElementById('project-quality-emoji');
        const personalReputationBar = document.getElementById('personal-reputation-bar');
        const personalReputationValue = document.getElementById('personal-reputation-value');
        const personalReputationEmoji = document.getElementById('personal-reputation-emoji');
        const indicatorItems = {
            teamMorale: document.querySelector('.indicator-item:nth-child(1)'),
            projectQuality: document.querySelector('.indicator-item:nth-child(2)'),
            personalReputation: document.querySelector('.indicator-item:nth-child(3)')
        };


        const standardScenarioView = document.getElementById('standard-scenario-view');
        const scenarioTitle = document.getElementById('scenario-title');
        const scenarioSituation = document.getElementById('scenario-situation');
        const scenarioQuestion = document.getElementById('scenario-question');
        const choicesContainer = document.getElementById('choices');
        const funFactPlaceholder = document.getElementById('fun-fact-placeholder');
        const prevScenarioBtn = document.getElementById('prev-scenario-btn');


        const emailScenarioView = document.getElementById('email-scenario-view');
        const emailFrom = document.getElementById('email-from');
        const emailSubject = document.getElementById('email-subject');
        const emailBody = document.getElementById('email-body');

        const phoneScenarioView = document.getElementById('phone-scenario-view');
        const phoneCallerId = document.getElementById('phone-caller-id');
        const phoneCallerNumber = document.getElementById('phone-caller-number');
        const phoneAction = document.getElementById('phone-action');

        const meetingScenarioView = document.getElementById('meeting-scenario-view');
        const meetingTitle = document.getElementById('meeting-title');
        const meetingAvatar = document.getElementById('meeting-avatar');
        const meetingDialogueText = document.getElementById('meeting-dialogue-text');

        const chatScenarioView = document.getElementById('chat-scenario-view');
        const chatSender = document.getElementById('chat-sender');
        const chatMessageText = document.getElementById('chat-message-text');

        const taskScenarioView = document.getElementById('task-scenario-view');
        const taskSituation = document.getElementById('task-situation');
        const taskItems = document.getElementById('task-items');

        const resourceAllocationView = document.getElementById('resource-allocation-view');
        const allocationTitle = document = document.getElementById('allocation-title');
        const allocationSituation = document.getElementById('allocation-situation');
        const rDInput = document.getElementById('r-d-input');
        const marketingInput = document.getElementById('marketing-input');
        const operationsInput = document.getElementById('operations-input');
        const supportInput = document.getElementById('support-input');
        const totalAllocationDisplay = document.getElementById('total-allocation-value');
        const allocationErrorMessage = document.getElementById('allocation-error-message');
        const submitAllocationBtn = document.getElementById('submit-allocation-btn');


        const profileIcon = document.getElementById('profile-icon');
        const profileName = document.getElementById('profile-name');
        const profileDescription = document.getElementById('profile-description');
        const traitsList = document.getElementById('traits-list');
        const idealRoles = document.getElementById('ideal-roles');
        const developmentAdvice = document.getElementById('development-advice');
        const scoresGrid = document.getElementById('scores-grid');

        // --- FUNCTIONS ---

        /**
         * Helper function to lighten a hex color by a percentage.
         * @param {string} hex - The hex color string (e.g., "#RRGGBB").
         * @param {number} percent - The percentage to lighten (e.g., 20 for 20%).
         * @returns {string} The new hex color string.
         */
        function lightenColor(hex, percent) {
            var f=parseInt(hex.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=(f>>8)&0x00FF,B=(f&0x0000FF);
            return "#"+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);
        }

        /**
         * Starts the personality test. Hides the welcome screen and shows the test screen.
         * Loads the first scenario.
         */
        function startTest() {
            welcomeScreen.classList.add('hidden');
            testScreen.classList.remove('hidden');
            testScreen.classList.add('fade-in');
            // Initialize playerState for the start of the test
            playerState = {
                teamMorale: 50,
                projectQuality: 50,
                personalReputation: 50
            };
            scenarioResponses = []; // Clear previous responses
            currentScenarioIndex = 0; // Ensure we start from the first scenario
            loadScenario();
        }

        /**
         * Recalculates total scores and player state based on the current `scenarioResponses` history.
         * This is called when navigating back or when a new path is chosen.
         */
        function recalculateStateAndScores() {
            // Reset player state and scores
            playerState = {
                teamMorale: 50,
                projectQuality: 50,
                personalReputation: 50
            };
            for (const trait in userScores) {
                userScores[trait] = 0;
            }

            // Reapply consequences and scores from recorded responses up to current index
            for (let i = 0; i < currentScenarioIndex; i++) {
                const response = scenarioResponses[i];
                if (!response) continue; // Skip if response is null/undefined (e.g., if array was trimmed)

                // Apply scores
                if (response.type === 'choice') {
                    for (const trait in response.scores) {
                        if (userScores.hasOwnProperty(trait)) {
                            userScores[trait] += response.scores[trait];
                        }
                    }
                    // Apply consequences
                    const originalScenario = scenarios.find(s => s.id === response.scenarioId);
                    if (originalScenario) {
                        // Find the chosen choice by comparing its scores, as choices might not have unique IDs
                        const chosenChoice = originalScenario.choices.find(c => {
                            // Deep comparison for objects
                            return JSON.stringify(c.scores) === JSON.stringify(response.scores);
                        });
                        
                        if (chosenChoice && chosenChoice.consequences) {
                            for (const effect in chosenChoice.consequences) {
                                if (playerState.hasOwnProperty(effect)) {
                                    playerState[effect] += chosenChoice.consequences[effect];
                                    // Clamp values to stay within 0-100 range
                                    playerState[effect] = Math.max(0, Math.min(100, playerState[effect]));
                                }
                            }
                        }
                    }
                } else if (response.type === 'allocation') {
                    // Apply scores from allocation
                    const scenario = scenarios.find(s => s.id === response.scenarioId);
                    if (scenario && scenario.departments) {
                        scenario.departments.forEach(dept => {
                            const allocatedValue = response.values[dept.id] || 0;
                            for (const trait in dept.traits) {
                                if (userScores.hasOwnProperty(trait)) {
                                    userScores[trait] += (allocatedValue / 10) * dept.traits[trait];
                                }
                            }
                            // Apply consequences for playerState from allocation
                            // This assumes department traits also have playerState consequences, or we calculate them here
                            // For simplicity, let's assume direct playerState consequences are not tied to traits in allocation,
                            // or they are handled separately if needed.
                            // If they were, it would look something like:
                            // if (dept.consequences) {
                            //     for (const effect in dept.consequences) {
                            //         playerState[effect] += (allocatedValue / 100) * dept.consequences[effect];
                            //         playerState[effect] = Math.max(0, Math.min(100, playerState[effect]));
                            //     }
                            // }
                        });
                    }
                }
            }
        }

        /**
         * Updates the player state indicators (bars and emojis).
         */
        function updatePlayerStateIndicators() {
            // Team Morale
            teamMoraleValue.textContent = Math.round(playerState.teamMorale);
            teamMoraleBar.style.width = `${playerState.teamMorale}%`;
            teamMoraleBar.classList.remove('good', 'medium', 'bad');
            if (playerState.teamMorale > 75) {
                teamMoraleBar.classList.add('good');
                teamMoraleEmoji.textContent = 'üòä';
            } else if (playerState.teamMorale > 40) {
                teamMoraleBar.classList.add('medium');
                teamMoraleEmoji.textContent = 'üòê';
            } else {
                teamMoraleBar.classList.add('bad');
                teamMoraleEmoji.textContent = 'üòî';
            }

            // Project Quality
            projectQualityValue.textContent = Math.round(playerState.projectQuality);
            projectQualityBar.style.width = `${playerState.projectQuality}%`;
            projectQualityBar.classList.remove('good', 'medium', 'bad');
            if (playerState.projectQuality > 75) {
                projectQualityBar.classList.add('good');
                projectQualityEmoji.textContent = '‚úÖ';
            } else if (playerState.projectQuality > 40) {
                projectQualityBar.classList.add('medium');
                projectQualityEmoji.textContent = '‚ö†Ô∏è';
            } else {
                projectQualityBar.classList.add('bad');
                projectQualityEmoji.textContent = '‚ùå';
            }

            // Personal Reputation
            personalReputationValue.textContent = Math.round(playerState.personalReputation);
            personalReputationBar.style.width = `${playerState.personalReputation}%`;
            personalReputationBar.classList.remove('good', 'medium', 'bad');
            if (playerState.personalReputation > 75) {
                personalReputationBar.classList.add('good');
                personalReputationEmoji.textContent = 'üåü';
            } else if (playerState.personalReputation > 40) {
                personalReputationBar.classList.add('medium');
                personalReputationEmoji.textContent = 'üëç';
            } else {
                personalReputationBar.classList.add('bad');
                personalReputationEmoji.textContent = 'üëé';
            }
        }

        /**
         * Displays a temporary text indicator for changes in player state.
         * @param {string} indicatorKey - The key of the indicator (e.g., 'teamMorale').
         * @param {number} change - The value of the change (positive or negative).
         */
        function showChangeIndicator(indicatorKey, change) {
            const indicatorItem = indicatorItems[indicatorKey];
            if (!indicatorItem) return;

            // Remove any existing change text
            const existingText = indicatorItem.querySelector('.change-indicator-text');
            if (existingText) {
                existingText.remove();
            }

            const changeText = document.createElement('span');
            changeText.classList.add('change-indicator-text');
            changeText.textContent = (change > 0 ? '+' : '') + change;
            changeText.classList.add(change > 0 ? 'positive' : 'negative');
            
            indicatorItem.appendChild(changeText);

            // Trigger reflow to ensure animation plays
            void changeText.offsetWidth; 
            changeText.classList.add('show');

            // Apply pulse animation to the bar
            const barFill = indicatorItem.querySelector('.indicator-bar-fill');
            if (barFill) {
                barFill.classList.remove('pulse-positive', 'pulse-negative'); // Reset animation
                void barFill.offsetWidth; // Trigger reflow
                barFill.classList.add(change > 0 ? 'pulse-positive' : 'pulse-negative');
            }

            setTimeout(() => {
                changeText.classList.remove('show');
                if (barFill) {
                    barFill.classList.remove('pulse-positive', 'pulse-negative');
                }
                setTimeout(() => changeText.remove(), 300); // Remove element after fade out
            }, 1500); // Display for 1.5 seconds
        }


        /**
         * Loads the current scenario based on `currentScenarioIndex`.
         * Updates the UI to display the scenario details and choices.
         * Handles different scenario types (standard, email, phone, meeting, chat, task, resource_allocation).
         */
        function loadScenario() {
            // Find the scenario by its ID, not just currentScenarioIndex, to support branching
            let scenario = scenarios[currentScenarioIndex];
            if (!scenario) { // If we've reached the end of the test or an invalid index
                showResults();
                return;
            }

            // Clear any existing fun fact before loading new scenario
            funFactPlaceholder.innerHTML = '';

            // Hide all scenario views first
            standardScenarioView.classList.add('hidden');
            emailScenarioView.classList.add('hidden');
            phoneScenarioView.classList.add('hidden');
            meetingScenarioView.classList.add('hidden');
            chatScenarioView.classList.add('hidden');
            taskScenarioView.classList.add('hidden');
            resourceAllocationView.classList.add('hidden');

            // Reset choices/allocation specific elements
            choicesContainer.innerHTML = '';
            scenarioQuestion.classList.remove('hidden'); // Ensure question is visible by default
            choicesContainer.classList.remove('hidden'); // Ensure choices are visible
            submitAllocationBtn.classList.add('hidden'); // Hide allocation submit button

            // Display content based on scenario type
            let currentSituationText = typeof scenario.situation === 'function' ? scenario.situation(playerState) : scenario.situation;
            let currentQuestionText = typeof scenario.question === 'function' ? scenario.question(playerState) : scenario.question;

            if (scenario.type === 'standard') {
                standardScenarioView.classList.remove('hidden');
                scenarioTitle.textContent = scenario.title;
                scenarioSituation.textContent = currentSituationText;
                scenarioQuestion.textContent = currentQuestionText;
                populateChoices(scenario);
            } else if (scenario.type === 'email') {
                emailScenarioView.classList.remove('hidden');
                emailFrom.textContent = scenario.from;
                emailSubject.textContent = scenario.subject;
                emailBody.innerHTML = currentSituationText; // Use innerHTML for line breaks
                scenarioQuestion.textContent = currentQuestionText;
                populateChoices(scenario);
            } else if (scenario.type === 'phone') {
                phoneScenarioView.classList.remove('hidden');
                phoneCallerId.textContent = scenario.caller;
                phoneCallerNumber.textContent = scenario.number;
                phoneAction.textContent = currentSituationText; // Phone action is the situation
                scenarioQuestion.textContent = currentQuestionText;
                populateChoices(scenario);
            } else if (scenario.type === 'meeting') {
                meetingScenarioView.classList.remove('hidden');
                meetingTitle.textContent = scenario.title;
                meetingAvatar.textContent = scenario.avatar;
                meetingDialogueText.textContent = currentSituationText; // Meeting dialogue is the situation
                scenarioQuestion.textContent = currentQuestionText;
                populateChoices(scenario);
            } else if (scenario.type === 'chat') {
                chatScenarioView.classList.remove('hidden');
                chatSender.textContent = scenario.sender;
                chatMessageText.textContent = currentSituationText; // Chat message is the situation
                scenarioQuestion.textContent = currentQuestionText;
                populateChoices(scenario);
            } else if (scenario.type === 'task') {
                taskScenarioView.classList.remove('hidden');
                taskSituation.textContent = currentSituationText; // Task situation
                taskItems.innerHTML = ''; // Clear previous task items
                if (scenario.tasks) {
                    scenario.tasks.forEach(task => {
                        const taskItemDiv = document.createElement('div');
                        taskItemDiv.classList.add('task-item');
                        taskItemDiv.textContent = task;
                        taskItems.appendChild(taskItemDiv);
                    });
                }
                scenarioQuestion.textContent = currentQuestionText;
                populateChoices(scenario);
            } else if (scenario.type === 'resource_allocation') {
                resourceAllocationView.classList.remove('hidden');
                allocationTitle.textContent = scenario.title;
                allocationSituation.textContent = currentSituationText;
                scenarioQuestion.classList.add('hidden'); // Hide general question for allocation

                // Initialize inputs based on previous response or default to 25
                const prevResponse = scenarioResponses[currentScenarioIndex];
                const defaultAllocation = (prevResponse && prevResponse.type === 'allocation' && prevResponse.scenarioId === scenario.id) ? prevResponse.values : {
                    r_d: 25, marketing: 25, operations: 25, support: 25
                };

                rDInput.value = defaultAllocation.r_d;
                marketingInput.value = defaultAllocation.marketing;
                operationsInput.value = defaultAllocation.operations;
                supportInput.value = defaultAllocation.support;

                updateAllocationTotal();

                // Add event listeners for real-time total update
                rDInput.oninput = updateAllocationTotal;
                marketingInput.oninput = updateAllocationTotal;
                operationsInput.oninput = updateAllocationTotal;
                supportInput.oninput = updateAllocationTotal;

                // Hide standard choices container and show submit button for allocation
                choicesContainer.classList.add('hidden');
                submitAllocationBtn.classList.remove('hidden');
            }

            // Manage "Previous" button visibility
            if (currentScenarioIndex === 0) {
                prevScenarioBtn.classList.add('hidden');
            } else {
                prevScenarioBtn.classList.remove('hidden');
            }

            updateProgressBar();
            updatePlayerStateIndicators(); // Update indicators after loading scenario
        }

        /**
         * Populates the choices container for standard Q&A scenarios.
         * @param {object} scenario - The current scenario object.
         */
        function populateChoices(scenario) {
            choicesContainer.classList.remove('hidden'); // Ensure choices are visible
            submitAllocationBtn.classList.add('hidden'); // Hide allocation submit button

            // Determine if this scenario has been answered before and which choice was selected
            const prevResponse = scenarioResponses[currentScenarioIndex];
            const previouslySelectedChoiceScores = (prevResponse && prevResponse.type === 'choice' && prevResponse.scenarioId === scenario.id) ? prevResponse.scores : null;
            const previouslySelectedChoiceIndex = previouslySelectedChoiceScores ? 
                                                scenario.choices.findIndex(c => JSON.stringify(c.scores) === JSON.stringify(previouslySelectedChoiceScores)) : -1;

            // Filter choices if there's a conditional `displayCondition`
            const availableChoices = scenario.choices.filter(choice => {
                if (choice.displayCondition && typeof choice.displayCondition === 'function') {
                    return choice.displayCondition(playerState);
                }
                return true;
            });

            choicesContainer.innerHTML = ''; // Clear existing choices before populating
            availableChoices.forEach((choice, index) => {
                const choiceDiv = document.createElement('div');
                choiceDiv.classList.add('choice');
                choiceDiv.onclick = (event) => handleAnswer(scenario, { type: 'choice', scores: choice.scores, nextScenarioId: choice.nextScenarioId }, event, index, choice.consequences);

                const choiceLetter = document.createElement('div');
                choiceLetter.classList.add('choice-letter');
                choiceLetter.textContent = String.fromCharCode(65 + index); // A, B, C, D

                const choiceText = document.createElement('div');
                choiceText.classList.add('choice-text');
                choiceText.textContent = choice.text;

                choiceDiv.appendChild(choiceLetter);
                choiceDiv.appendChild(choiceText);
                choicesContainer.appendChild(choiceDiv);

                // If this scenario has been answered, disable all choices and highlight the previously selected one
                if (previouslySelectedChoiceIndex !== -1) {
                    choiceDiv.classList.add('disabled');
                    if (index === previouslySelectedChoiceIndex) {
                        choiceDiv.classList.remove('disabled'); // Re-enable the selected one for visual feedback
                        choiceDiv.classList.add('selected-choice-feedback');
                    }
                }
            });
        }

        /**
         * Updates the total allocated value for the resource allocation mini-game.
         * Shows an error if the total is not 100.
         */
        function updateAllocationTotal() {
            const rD = parseInt(rDInput.value) || 0;
            const marketing = parseInt(marketingInput.value) || 0;
            const operations = parseInt(operationsInput.value) || 0;
            const support = parseInt(supportInput.value) || 0;
            const total = rD + marketing + operations + support;

            totalAllocationDisplay.textContent = total;
            if (total !== 100) {
                totalAllocationDisplay.parentElement.classList.add('error');
                allocationErrorMessage.classList.remove('hidden');
                submitAllocationBtn.disabled = true;
            } else {
                totalAllocationDisplay.parentElement.classList.remove('error');
                allocationErrorMessage.classList.add('hidden');
                submitAllocationBtn.disabled = false;
            }
        }

        /**
         * Submits the allocation values for the resource allocation mini-game.
         */
        function submitAllocation() {
            const rD = parseInt(rDInput.value) || 0;
            const marketing = parseInt(marketingInput.value) || 0;
            const operations = parseInt(operationsInput.value) || 0;
            const support = parseInt(supportInput.value) || 0;
            const total = rD + marketing + operations + support;

            if (total !== 100) {
                // Error message already shown by updateAllocationTotal
                return;
            }

            const allocationValues = {
                r_d: rD,
                marketing: marketing,
                operations: operations,
                support: support
            };
            
            // Calculate consequences for playerState based on allocation
            const currentScenario = scenarios[currentScenarioIndex];
            const consequences = {};
            if (currentScenario.departments) {
                currentScenario.departments.forEach(dept => {
                    const allocatedValue = allocationValues[dept.id] || 0;
                    // Example: 1 unit of allocation in R&D gives 0.1 to projectQuality
                    if (dept.projectQuality) consequences.projectQuality = (consequences.projectQuality || 0) + (allocatedValue / 10) * dept.projectQuality;
                    if (dept.teamMorale) consequences.teamMorale = (consequences.teamMorale || 0) + (allocatedValue / 10) * dept.teamMorale;
                    if (dept.personalReputation) consequences.personalReputation = (consequences.personalReputation || 0) + (allocatedValue / 10) * dept.personalReputation;
                });
            }

            handleAnswer(currentScenario, { type: 'allocation', values: allocationValues }, null, -1, consequences);
        }


        /**
         * Updates the progress bar and scenario counter.
         */
        function updateProgressBar() {
            const progress = ((currentScenarioIndex + 1) / scenarios.length) * 100;
            progressFill.style.width = `${progress}%`;
            scenarioCounter.textContent = `Sc√©nario ${currentScenarioIndex + 1} / ${scenarios.length}`;
            progressText.textContent = `${Math.round(progress)}% compl√©t√©`;
        }

        /**
         * Handles the user's answer for the current scenario, updates scores, and loads the next scenario.
         * @param {object} scenario - The current scenario object.
         * @param {object} answer - The answer object (e.g., {type: 'choice', scores: {...}, nextScenarioId: '...'} or {type: 'allocation', values: {...}}).
         * @param {Event} [event] - The click event for choice selection (optional).
         * @param {number} [selectedIndex] - The index of the selected choice (optional, for visual feedback).
         * @param {object} [consequences] - Direct consequences on playerState from the chosen option (optional).
         */
        function handleAnswer(scenario, answer, event = null, selectedIndex = -1, consequences = {}) {
            // Disable all choices immediately for standard Q&A
            if (scenario.type !== 'resource_allocation') {
                Array.from(choicesContainer.children).forEach((c, index) => {
                    c.classList.add('disabled');
                    c.classList.remove('selected-choice-feedback'); // Remove feedback from previous selection if any
                    if (index === selectedIndex) {
                        c.classList.remove('disabled'); // Keep the selected one enabled for feedback
                        c.classList.add('selected-choice-feedback');
                    }
                });
            }

            // Store the response for the current scenario, including the scenario ID and chosen option
            scenarioResponses[currentScenarioIndex] = {
                scenarioId: scenario.id,
                type: answer.type,
                scores: answer.scores, // For choice type
                values: answer.values, // For allocation type
                nextScenarioId: answer.nextScenarioId, // For choice type
                // Store the consequences that were applied for this specific choice
                appliedConsequences: consequences 
            };
            // Trim future responses if we went back and chose a new path
            scenarioResponses.splice(currentScenarioIndex + 1);

            // Store the player state *before* applying consequences, for showing the change indicator
            const playerStateBeforeChoice = { ...playerState };

            // Apply immediate consequences to playerState
            for (const effect in consequences) {
                if (playerState.hasOwnProperty(effect)) {
                    const oldValue = playerState[effect];
                    playerState[effect] += consequences[effect];
                    // Clamp values to stay within 0-100 range
                    playerState[effect] = Math.max(0, Math.min(100, playerState[effect]));
                    // Show visual indicator of change
                    showChangeIndicator(effect, playerState[effect] - oldValue);
                }
            }
            
            recalculateStateAndScores(); // Recalculate total scores and state from history

            // Handle fun fact display and progression
            if (scenario.funFact) {
                const funFactBox = document.createElement('div');
                funFactBox.classList.add('fun-fact-box');
                funFactBox.innerHTML = `<strong>Le saviez-vous ?</strong> ${scenario.funFact}`;
                funFactPlaceholder.appendChild(funFactBox);

                setTimeout(() => {
                    funFactBox.remove();
                    // Determine next scenario based on choice's nextScenarioId or linear progression
                    if (answer.nextScenarioId) {
                        currentScenarioIndex = scenarioMap.get(answer.nextScenarioId);
                    } else {
                        currentScenarioIndex++;
                    }
                    loadScenario();
                }, 4000); // Display fact for 4 seconds
            } else {
                // Determine next scenario based on choice's nextScenarioId or linear progression
                if (answer.nextScenarioId) {
                    currentScenarioIndex = scenarioMap.get(answer.nextScenarioId);
                } else {
                    currentScenarioIndex++;
                }
                loadScenario();
            }
        }

        /**
         * Navigates back to the previous scenario.
         */
        function goBack() {
            if (currentScenarioIndex > 0) {
                currentScenarioIndex--;
                // Remove the last response as we are going back
                scenarioResponses.pop(); 
                recalculateStateAndScores(); // Recalculate scores and state from history
                loadScenario();
            }
        }

        /**
         * Determines the user's primary personality profile based on their scores.
         * @returns {string} The name of the dominant personality profile.
         */
        function getDominantProfile() {
            let maxScore = -1;
            let dominantProfile = '';
            let isTie = false;

            for (const trait in userScores) {
                if (userScores[trait] > maxScore) {
                    maxScore = userScores[trait];
                    dominantProfile = trait;
                    isTie = false;
                } else if (userScores[trait] === maxScore && maxScore > 0) {
                    isTie = true; // Indicate a tie
                }
            }
            // If there's a tie, or no dominant profile (all scores 0), default to a balanced profile or first in list
            if (isTie || dominantProfile === '') {
                // Fallback to a balanced profile or the first one if all are zero/tied
                return Object.keys(profiles)[0]; // Default to 'leader' or first defined profile
            }
            return dominantProfile;
        }

        /**
         * Displays the results screen, showing the user's personality profile,
         * strengths, ideal roles, development advice, and detailed scores.
         */
        function showResults() {
            testScreen.classList.add('hidden');
            resultsScreen.classList.remove('hidden');
            resultsScreen.classList.add('fade-in');

            const dominantProfileKey = getDominantProfile();
            const dominantProfile = profiles[dominantProfileKey];

            // Update profile summary
            profileIcon.textContent = dominantProfile.icon;
            profileIcon.style.background = dominantProfile.color;
            profileName.textContent = dominantProfile.name;
            profileDescription.textContent = dominantProfile.description;

            // Update strengths list
            traitsList.innerHTML = '';
            dominantProfile.strengths.forEach(strength => {
                const li = document.createElement('li');
                li.textContent = strength;
                traitsList.appendChild(li);
            });

            // Update ideal roles and development advice
            idealRoles.textContent = dominantProfile.idealRoles;
            developmentAdvice.textContent = dominantProfile.developmentAdvice;

            // Update detailed scores grid
            scoresGrid.innerHTML = '';
            for (const trait in userScores) {
                const scoreItem = document.createElement('div');
                scoreItem.classList.add('score-item');

                const scoreCircle = document.createElement('div');
                scoreCircle.classList.add('score-circle', trait); // Add trait class for specific color
                scoreCircle.textContent = Math.round(userScores[trait]); // Round scores for display

                const scoreLabel = document.createElement('p');
                scoreLabel.textContent = profiles[trait].name.split(' ')[1]; // Get just the trait name (e.g., "Leader")

                scoreItem.appendChild(scoreCircle);
                scoreItem.appendChild(scoreLabel);
                scoresGrid.appendChild(scoreItem);
            }

            // Set dynamic background for the results page based on dominant profile
            document.body.style.background = `linear-gradient(135deg, ${dominantProfile.color} 0%, ${lightenColor(dominantProfile.color, 20)} 100%)`;
        }

        /**
         * Resets the test to its initial state, clearing scores and returning to the welcome screen.
         * Also resets the body background to its default gradient.
         */
        function resetTest() {
            currentScenarioIndex = 0;
            scenarioResponses = []; // Clear all responses
            playerState = { // Reset player state to initial values
                teamMorale: 50,
                projectQuality: 50,
                personalReputation: 50
            };
            for (const trait in userScores) {
                userScores[trait] = 0; // Reset all scores
            }
            resultsScreen.classList.add('hidden');
            welcomeScreen.classList.remove('hidden');
            welcomeScreen.classList.add('fade-in');
            updateProgressBar(); // Reset progress bar visually
            updatePlayerStateIndicators(); // Reset indicators visually
            // Reset body background to default
            document.body.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
        }

        /**
         * Sets the display mode (auto, mobile, desktop) for the body.
         * Updates active state of mode switcher buttons.
         * @param {string} mode - The mode to set ('auto', 'mobile', 'desktop').
         */
        function setMode(mode) {
            document.body.classList.remove('auto-mode', 'mobile-mode', 'desktop-mode');
            document.body.classList.add(`${mode}-mode`);

            // Update active button state
            document.querySelectorAll('.mode-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            document.getElementById(`${mode}-btn`).classList.add('active');
        }

        // Initialize with auto mode
        document.addEventListener('DOMContentLoaded', () => {
            setMode('auto');
        });
    </script>
</body>
</html>
